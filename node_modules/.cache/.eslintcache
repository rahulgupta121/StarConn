[{"E:\\react-projects\\new project\\2022\\converter\\converter\\src\\index.js":"1","E:\\react-projects\\new project\\2022\\converter\\converter\\src\\reportWebVitals.js":"2","E:\\react-projects\\new project\\2022\\converter\\converter\\src\\App.js":"3","E:\\react-projects\\new project\\2022\\converter\\converter\\src\\components\\Footer.js":"4","E:\\react-projects\\new project\\2022\\converter\\converter\\src\\components\\TabNav.js":"5","E:\\react-projects\\new project\\2022\\converter\\converter\\src\\components\\Heading_logo.js":"6","E:\\react-projects\\new project\\2022\\converter\\converter\\src\\components\\Navbar.js":"7"},{"size":535,"mtime":1661666534645,"results":"8","hashOfConfig":"9"},{"size":362,"mtime":1661666536313,"results":"10","hashOfConfig":"9"},{"size":445,"mtime":1673681225682,"results":"11","hashOfConfig":"9"},{"size":1400,"mtime":1673683297935,"results":"12","hashOfConfig":"9"},{"size":15259,"mtime":1673709910330,"results":"13","hashOfConfig":"9"},{"size":385,"mtime":1662213148108,"results":"14","hashOfConfig":"9"},{"size":1477,"mtime":1662213979799,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","suppressedMessages":"18","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"19"},"1v4ony1",{"filePath":"20","messages":"21","suppressedMessages":"22","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"19"},{"filePath":"23","messages":"24","suppressedMessages":"25","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"26","usedDeprecatedRules":"19"},{"filePath":"27","messages":"28","suppressedMessages":"29","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30","usedDeprecatedRules":"19"},{"filePath":"31","messages":"32","suppressedMessages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34"},{"filePath":"35","messages":"36","suppressedMessages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"19"},{"filePath":"38","messages":"39","suppressedMessages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"19"},"E:\\react-projects\\new project\\2022\\converter\\converter\\src\\index.js",[],[],[],"E:\\react-projects\\new project\\2022\\converter\\converter\\src\\reportWebVitals.js",[],[],"E:\\react-projects\\new project\\2022\\converter\\converter\\src\\App.js",["41"],[],"import \"./styles/styles.css\"\nimport Heading_logo from \"./components/Heading_logo\";\nimport TopNavbar from \"./components/Navbar\";\nimport TabNav from \"./components/TabNav\";\nimport Footer from \"./components/Footer\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <Heading_logo />\n      <TopNavbar />\n      \n      <TabNav />\n      </header>\n      <Footer/>\n    </div>\n  );\n}\n\nexport default App;\n","E:\\react-projects\\new project\\2022\\converter\\converter\\src\\components\\Footer.js",["42","43","44","45","46","47"],[],"import React from 'react'\r\nimport { Container, Row, Col } from 'react-bootstrap'\r\n\r\nfunction Footer() {\r\n  return (\r\n    <>\r\n       <Container fluid className='navTab py-5'>\r\n        <Row>\r\n            <Col lg={2} className=\"text-center\">\r\n            <h6><strong>Company</strong></h6>\r\n            <h6>About Us</h6>\r\n            <h6>Security</h6>\r\n            </Col>\r\n            <Col lg={2} className=\"text-center\">\r\n            <h6><strong>Resourse</strong></h6>\r\n            <h6><a>Blog</a></h6>\r\n            <h6><a>Status</a></h6>\r\n            </Col>\r\n            <Col lg={2} className=\"text-center\">\r\n            <h6><strong>Legal</strong></h6>\r\n            <h6><a>Privacy</a></h6>\r\n            <h6><a>Terms</a></h6>\r\n            </Col>\r\n            <Col lg={2} className=\"text-center\">\r\n            <h6><strong>Contact Us</strong></h6>\r\n            <h6><a>Contact</a></h6>\r\n            <h6><a>Mini Logo</a></h6>\r\n            </Col>\r\n            <Col lg={4} className=\"text-center\">\r\n            <h6>@ 2023 Converterlly</h6>\r\n            <p>Mabe in Delhi, India</p>\r\n            {/* <a>Mini Logo</a> */}\r\n            </Col>\r\n        </Row>\r\n        <Row className=''>\r\n            <p className='text-center py-3 my-2'>We've already<b> converted 12,334,888 files </b> with a total size of <b>112,333,093 TB</b></p>\r\n        </Row>\r\n        </Container> \r\n    </>\r\n  )\r\n}\r\n\r\nexport default Footer","E:\\react-projects\\new project\\2022\\converter\\converter\\src\\components\\TabNav.js",["48","49","50","51"],[],"import React, {useState,useRef} from \"react\";\r\nimport Tab from \"react-bootstrap/Tab\";\r\nimport Tabs from \"react-bootstrap/Tabs\";\r\n// import Docx from 'docx-pdf';\r\nimport jsPDF from 'jspdf';\r\nfunction TabNav(event) {\r\n\r\n  // function convertToJPG() {\r\n  //   var pngFile = document.getElementById('png-file').files[0];\r\n  //   var pngImage = new Image();\r\n  //   var canvas = document.createElement('canvas');\r\n  //   var ctx = canvas.getContext('2d');\r\n  //   var imgData;\r\n\r\n  //   pngImage.onload = function() {\r\n  //     canvas.width = pngImage.width;\r\n  //     canvas.height = pngImage.height;\r\n  //     ctx.drawImage(pngImage, 0, 0);\r\n  //     imgData = canvas.toDataURL('image/jpeg');\r\n  //     document.getElementById('jpg-image').src = imgData;\r\n  //   };\r\n  //   pngImage.src = URL.createObjectURL(pngFile);\r\n  // }\r\n  const [pngFile, setPngFile] = useState(null);\r\n  const [jpgImage, setJpgImage] = useState(null);\r\n\r\n  function handleFileChange(event) {\r\n    setPngFile(event.target.files[0]);\r\n  }\r\n\r\nfunction convertToJPG() {\r\n  const pngImage = new Image();\r\n  const canvas = document.createElement('canvas');\r\n  const ctx = canvas.getContext('2d');\r\n  let imgData;\r\n\r\n  pngImage.onload = function() {\r\n    canvas.width = pngImage.width;\r\n    canvas.height = pngImage.height;\r\n    ctx.drawImage(pngImage, 0, 0);\r\n    imgData = canvas.toDataURL('image/jpeg');\r\n    setJpgImage(imgData);\r\n  };\r\n  pngImage.src = URL.createObjectURL(pngFile);\r\n}\r\n\r\nfunction downloadJPG() {\r\n  const link = document.createElement('a');\r\n  link.download = 'image.jpg';\r\n  link.href = jpgImage;\r\n  link.click();\r\n}\r\n// png to webp\r\nconst [webp, setWebp] = useState(null);\r\n  const fileInput = useRef(null);\r\n\r\n  const handleFileChange1 = async (e) => {\r\n    const file = e.target.files[0];\r\n    if (!file) return;\r\n    if (file.type !== 'image/png') {\r\n      alert('Please select a PNG image.');\r\n      return;\r\n    }\r\n    const imageUrl = URL.createObjectURL(file);\r\n    const image = new Image();\r\n    image.src = imageUrl;\r\n    await new Promise((resolve) => {\r\n      image.onload = resolve;\r\n    });\r\n    const canvas = document.createElement('canvas');\r\n    canvas.width = image.width;\r\n    canvas.height = image.height;\r\n    const ctx = canvas.getContext('2d');\r\n    ctx.drawImage(image, 0, 0);\r\n    const webpData = canvas.toDataURL('image/webp');\r\n    setWebp(webpData);\r\n  };\r\n  const handleDownload1 = () => {\r\n    if (!webp) return;\r\n    const link = document.createElement('a');\r\n    link.download = 'converted.webp';\r\n    link.href = webp;\r\n    link.click();\r\n  };\r\n\r\n  // doc to pdf\r\n  // const [pdf, setPdf] = useState(null);\r\n  // const fileInput2 = useRef(null);\r\n\r\n  // const handleFileChange2 = async (e) => {\r\n  //   const file = e.target.files[0];\r\n  //   if (!file) return;\r\n  //   if (file.type !== 'application/vnd.openxmlformats-officedocument.wordprocessingml.document') {\r\n  //     alert('Please select a DOCX file.');\r\n  //     return;\r\n  //   }\r\n  //   const pdfData = await Docx.convert(file, { resolve: { fallback: { buffer: false } } });\r\n  //   setPdf(pdfData);\r\n  // };\r\n\r\n  // const handleDownload2 = () => {\r\n  //   if (!pdf) return;\r\n  //   const link = document.createElement('a');\r\n  //   link.href = pdf;\r\n  //   link.download = 'converted.pdf';\r\n  //   link.click();\r\n  // };\r\n\r\n  // png to gif\r\n  const [gif, setGif] = useState(null);\r\n  const fileInput3 = useRef(null);\r\n\r\n  const handleFileChange3 = async (e) => {\r\n    const file = e.target.files[0];\r\n    if (!file) return;\r\n    if (file.type !== 'image/png') {\r\n      alert('Please select a PNG image.');\r\n      return;\r\n    }\r\n    const imageUrl = URL.createObjectURL(file);\r\n    const image = new Image();\r\n    image.src = imageUrl;\r\n    await new Promise((resolve) => {\r\n      image.onload = resolve;\r\n    });\r\n    const canvas = document.createElement('canvas');\r\n    canvas.width = image.width;\r\n    canvas.height = image.height;\r\n    const ctx = canvas.getContext('2d');\r\n    ctx.drawImage(image, 0, 0);\r\n    const gifData = canvas.toDataURL('image/gif');\r\n    setGif(gifData);\r\n  };\r\n\r\n  const handleDownload3 = () => {\r\n    if (!gif) return;\r\n    const link = document.createElement('a');\r\n    link.download = 'converted.gif';\r\n    link.href = gif;\r\n    link.click();\r\n  };\r\n\r\n  // png to pdf\r\n  const [pdf, setPdf] = useState(null);\r\n  const fileInput4 = useRef(null);\r\n\r\n  const handleFileChange4 = async (e) => {\r\n    const file = e.target.files[0];\r\n    if (!file) return;\r\n    if (file.type !== 'image/png') {\r\n      alert('Please select a PNG image.');\r\n      return;\r\n    }\r\n    const imageUrl = URL.createObjectURL(file);\r\n    const image = new Image();\r\n    image.src = imageUrl;\r\n    await new Promise((resolve) => {\r\n      image.onload = resolve;\r\n    });\r\n    const canvas = document.createElement('canvas');\r\n    canvas.width = image.width;\r\n    canvas.height = image.height;\r\n    const ctx = canvas.getContext('2d');\r\n    ctx.drawImage(image, 0, 0);\r\n    const imgData = canvas.toDataURL('image/png');\r\n    const pdfDoc = new jsPDF();\r\n    pdfDoc.addImage(imgData, 'PNG', 0, 0);\r\n    const pdfData = pdfDoc.output();\r\n    setPdf(pdfData);\r\n  };\r\n\r\n  const handleDownload4 = () => {\r\n    alert(\"hello\");\r\n    if (!pdf) return;\r\n    const fileInput = document.querySelector('input[type=\"file\"]');\r\n    if (!fileInput) return;\r\n    const file = fileInput.files[0];\r\n    if (!file) return;\r\n    const name = file.name.split('.')[0] + '.pdf';\r\n    const pdfDoc = new jsPDF();\r\n    // pdfDoc.save(name);\r\n    pdfDoc.output('dataurlnewwindow', name);\r\n  };\r\n\r\n\r\n\r\n  return (\r\n    <>\r\n      <Tabs\r\n        defaultActiveKey=\"home\"\r\n        id=\"uncontrolled-tab-example\"\r\n        className=\"mb-3 navTab d-flex justify-content-center\"\r\n      >\r\n        <Tab eventKey=\"home\" title=\"PNG to JPG\">\r\n          <div>\r\n            <section id=\"drop-section\">\r\n              <div class=\"file-select container my-5\">\r\n                <div class=\"row justify-content-center\">\r\n                  <div class=\"drag-section text-center\">\r\n                    <div class=\"drop-message\">\r\n                      \r\n                       <input type=\"file\" accept=\".png\" onChange={handleFileChange} />\r\n                      <br />\r\n                      <div style={{width:\"100%\"}}>\r\n\r\n                      <img src={jpgImage} alt=\"JPG Image\" className=\"img-fluid\" />\r\n                      </div>\r\n                      <br />\r\n                      <button onClick={convertToJPG}>Convert to JPG</button>\r\n                    \r\n                      <button onClick={downloadJPG}>Download JPG</button>\r\n                    \r\n                    </div>\r\n                    <div\r\n                      id=\"image_previews\"\r\n                      class=\"previews-container ml-4 mr-auto img-fluid\"\r\n                    ></div>\r\n{/* \r\n                    <button\r\n                      type=\"button\"\r\n                      class=\"btn btn-primary btn-primary-bold-modifier px-4 py-3 font-weight-bold\"\r\n                    >\r\n                      Select Image\r\n                    </button> */}\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </section>\r\n          </div>\r\n        </Tab>\r\n        <Tab eventKey=\"Web_p\" title=\"PNG to Webp\">\r\n          <section id=\"drop-section\">\r\n            <div class=\"file-select container my-5\">\r\n              <div class=\"row justify-content-center\">\r\n                <div class=\"drag-section text-center\">\r\n                  <div class=\"drop-message\">\r\n                    {/* <img\r\n                      src=\"\"\r\n                      alt=\"Upload image\"\r\n                      class=\"img-fluid upload-image\"\r\n                    />\r\n                    <h4 class=\"file-upload-text my-3\">\r\n                      Drop your images here or <span>browse.</span>\r\n                    </h4> */}\r\n\r\n                <input type=\"file\" ref={fileInput} onChange={handleFileChange1} />\r\n                      {webp && <img src={webp} alt=\"webp\" className=\"w-100\" />}\r\n                      <br />\r\n                      <button onClick={handleDownload1} disabled={!webp}>\r\n                        Download WebP\r\n                      </button>\r\n                  </div>\r\n                  \r\n                </div>\r\n              </div>\r\n            </div>\r\n          </section>\r\n        </Tab>\r\n        <Tab eventKey=\"video_webP\" title=\"DOC to PDF\">\r\n          <section id=\"drop-section\">\r\n            <div class=\"file-select container my-5\">\r\n              <div class=\"row justify-content-center\">\r\n                <div class=\"drag-section text-center\">\r\n                  <div class=\"drop-message\">\r\n                  {/* <input type=\"file\" ref={fileInput2} onChange={handleFileChange2} accept=\"application/vnd.openxmlformats-officedocument.wordprocessingml.document\" />\r\n                    <br />\r\n                    <button onClick={handleDownload2} disabled={!pdf}>\r\n                      Download PDF\r\n                    </button> */}\r\n                </div></div>\r\n              </div>\r\n            </div>\r\n          </section>\r\n        </Tab>\r\n        <Tab eventKey=\"gif_webp\" title=\"PNG to GIF\">\r\n          <section id=\"drop-section\">\r\n            <div class=\"file-select container my-5\">\r\n              <div class=\"row justify-content-center\">\r\n                <div class=\"drag-section text-center\">\r\n                  <div class=\"drop-message\">\r\n                  <input type=\"file\" ref={fileInput3} onChange={handleFileChange3} accept=\"image/png\" />\r\n      {gif && <img src={gif} alt=\"gif\" />}\r\n      <br />\r\n      <button onClick={handleDownload3} disabled={!gif}>\r\n        Download GIF\r\n      </button>\r\n                </div></div>\r\n              </div>\r\n            </div>\r\n          </section>\r\n        </Tab>\r\n        <Tab eventKey=\"jpg_webP\" title=\"PNG to PDF\">\r\n          <section id=\"drop-section\">\r\n            <div class=\"file-select container my-5\">\r\n              <div class=\"row justify-content-center\">\r\n                <div class=\"drag-section text-center\">\r\n                  <div class=\"drop-message\">\r\n                  <input type=\"file\" ref={fileInput4} onChange={handleFileChange4} accept=\"image/png\" />\r\n      <br />\r\n      <button onClick={handleDownload4} disabled={!pdf}>\r\n        Download PDF\r\n      </button>\r\n                  </div>\r\n                  \r\n                </div>\r\n              </div>\r\n            </div>\r\n          </section>\r\n        </Tab>\r\n        <Tab eventKey=\"png_webP\" title=\"PNG to WebP\">\r\n          <section id=\"drop-section\">\r\n            <div class=\"file-select container my-5\">\r\n              <div class=\"row justify-content-center\">\r\n                <div class=\"drag-section text-center\">\r\n                  <div class=\"drop-message\">\r\n                    <img\r\n                      src=\"\"\r\n                      alt=\"Upload image\"\r\n                      class=\"img-fluid upload-image\"\r\n                    />\r\n                    <h4 class=\"file-upload-text my-3\">\r\n                      Drop your images here or <span>browse.</span>\r\n                    </h4>\r\n                  </div>\r\n                  <div\r\n                    id=\"image_previews\"\r\n                    class=\"previews-container ml-4 mr-auto\"\r\n                  ></div>\r\n\r\n                  <button\r\n                    type=\"button\"\r\n                    class=\"btn btn-primary btn-primary-bold-modifier px-4 py-3 font-weight-bold\"\r\n                  >\r\n                    Select Image\r\n                  </button>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </section>\r\n        </Tab>\r\n        <Tab eventKey=\"webp_gif\" title=\"WEBP to Gif\">\r\n          <section id=\"drop-section\">\r\n            <div class=\"file-select container my-5\">\r\n              <div class=\"row justify-content-center\">\r\n                <div class=\"drag-section text-center\">\r\n                  <div class=\"drop-message\">\r\n                    <img\r\n                      src=\"\"\r\n                      alt=\"Upload image\"\r\n                      class=\"img-fluid upload-image\"\r\n                    />\r\n                    <h4 class=\"file-upload-text my-3\">\r\n                      Drop your images here or <span>browse.</span>\r\n                    </h4>\r\n                  </div>\r\n                  <div\r\n                    id=\"image_previews\"\r\n                    class=\"previews-container ml-4 mr-auto\"\r\n                  ></div>\r\n\r\n                  <button\r\n                    type=\"button\"\r\n                    class=\"btn btn-primary btn-primary-bold-modifier px-4 py-3 font-weight-bold\"\r\n                  >\r\n                    Select Image\r\n                  </button>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </section>\r\n        </Tab>\r\n        <Tab eventKey=\"WebP to PNG\" title=\"WebP to PNG\">\r\n          <section id=\"drop-section\">\r\n            <div class=\"file-select container my-5\">\r\n              <div class=\"row justify-content-center\">\r\n                <div class=\"drag-section text-center\">\r\n                  <div class=\"drop-message\">\r\n                    <img\r\n                      src=\"\"\r\n                      alt=\"Upload image\"\r\n                      class=\"img-fluid upload-image\"\r\n                    />\r\n                    <h4 class=\"file-upload-text my-3\">\r\n                      Drop your images here or <span>browse.</span>\r\n                    </h4>\r\n                  </div>\r\n                  <div\r\n                    id=\"image_previews\"\r\n                    class=\"previews-container ml-4 mr-auto\"\r\n                  ></div>\r\n\r\n                  <button\r\n                    type=\"button\"\r\n                    class=\"btn btn-primary btn-primary-bold-modifier px-4 py-3 font-weight-bold\"\r\n                  >\r\n                    Select Image\r\n                  </button>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </section>\r\n        </Tab>\r\n        {/* <Tab eventKey=\"profile\" title=\"Profile\">\r\n        <section id=\"drop-section\">\r\n\r\n<div class=\"file-select container my-5\">\r\n  <div class=\"row justify-content-center\">\r\n<div class=\"drag-section text-center\">\r\n                            <div class=\"drop-message\">\r\n                                <img src=\"\" alt=\"Upload image\" class=\"img-fluid upload-image\" />\r\n                                <h4 class=\"file-upload-text my-3\">Drop your images here or <span>browse.</span></h4>\r\n                            </div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t  <div id=\"image_previews\" class=\"previews-container ml-4 mr-auto\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<button type=\"button\" class=\"btn btn-primary btn-primary-bold-modifier px-4 py-3 font-weight-bold\">Select Image</button>\r\n                        </div>\r\n                        </div>\r\n</div>\r\n</section>  \r\n      </Tab>\r\n      <Tab eventKey=\"profile\" title=\"Profile\">\r\n        <h6>fghjkldfghjk</h6>\r\n      </Tab>\r\n      <Tab eventKey=\"profile\" title=\"Profile\">\r\n        <h6>fghjkldfghjk</h6>\r\n      </Tab>\r\n      <Tab eventKey=\"profile\" title=\"Profile\">\r\n        <h6>fghjkldfghjk</h6>\r\n      </Tab>\r\n      <Tab eventKey=\"profile\" title=\"Profile\">\r\n        <h6>fghjkldfghjk</h6>\r\n      </Tab> */}\r\n      </Tabs>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default TabNav;\r\n","E:\\react-projects\\new project\\2022\\converter\\converter\\src\\components\\Heading_logo.js",[],[],"E:\\react-projects\\new project\\2022\\converter\\converter\\src\\components\\Navbar.js",[],[],{"ruleId":"52","severity":1,"message":"53","line":11,"column":9,"nodeType":"54","messageId":"55","endLine":11,"endColumn":25},{"ruleId":"56","severity":1,"message":"57","line":16,"column":17,"nodeType":"54","endLine":16,"endColumn":20},{"ruleId":"56","severity":1,"message":"57","line":17,"column":17,"nodeType":"54","endLine":17,"endColumn":20},{"ruleId":"56","severity":1,"message":"57","line":21,"column":17,"nodeType":"54","endLine":21,"endColumn":20},{"ruleId":"56","severity":1,"message":"57","line":22,"column":17,"nodeType":"54","endLine":22,"endColumn":20},{"ruleId":"56","severity":1,"message":"57","line":26,"column":17,"nodeType":"54","endLine":26,"endColumn":20},{"ruleId":"56","severity":1,"message":"57","line":27,"column":17,"nodeType":"54","endLine":27,"endColumn":20},{"ruleId":"58","severity":1,"message":"59","line":206,"column":23,"nodeType":"54","endLine":206,"endColumn":83},{"ruleId":"58","severity":1,"message":"59","line":316,"column":21,"nodeType":"54","endLine":320,"endColumn":23},{"ruleId":"58","severity":1,"message":"59","line":347,"column":21,"nodeType":"54","endLine":351,"endColumn":23},{"ruleId":"58","severity":1,"message":"59","line":378,"column":21,"nodeType":"54","endLine":382,"endColumn":23},"react/jsx-pascal-case","Imported JSX component Heading_logo must be in PascalCase or SCREAMING_SNAKE_CASE","JSXOpeningElement","usePascalOrSnakeCase","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop."]