{"ast":null,"code":"var rules = require(\"./rules\");\n\nvar results = require(\"./parsing-results\");\n\nexports.parser = function (name, prefixRules, infixRuleBuilders) {\n  var self = {\n    rule: rule,\n    leftAssociative: leftAssociative,\n    rightAssociative: rightAssociative\n  };\n  var infixRules = new InfixRules(infixRuleBuilders.map(createInfixRule));\n  var prefixRule = rules.firstOf(name, prefixRules);\n\n  function createInfixRule(infixRuleBuilder) {\n    return {\n      name: infixRuleBuilder.name,\n      rule: lazyRule(infixRuleBuilder.ruleBuilder.bind(null, self))\n    };\n  }\n\n  function rule() {\n    return createRule(infixRules);\n  }\n\n  function leftAssociative(name) {\n    return createRule(infixRules.untilExclusive(name));\n  }\n\n  function rightAssociative(name) {\n    return createRule(infixRules.untilInclusive(name));\n  }\n\n  function createRule(infixRules) {\n    return apply.bind(null, infixRules);\n  }\n\n  function apply(infixRules, tokens) {\n    var leftResult = prefixRule(tokens);\n\n    if (leftResult.isSuccess()) {\n      return infixRules.apply(leftResult);\n    } else {\n      return leftResult;\n    }\n  }\n\n  return self;\n};\n\nfunction InfixRules(infixRules) {\n  function untilExclusive(name) {\n    return new InfixRules(infixRules.slice(0, ruleNames().indexOf(name)));\n  }\n\n  function untilInclusive(name) {\n    return new InfixRules(infixRules.slice(0, ruleNames().indexOf(name) + 1));\n  }\n\n  function ruleNames() {\n    return infixRules.map(function (rule) {\n      return rule.name;\n    });\n  }\n\n  function apply(leftResult) {\n    var currentResult;\n    var source;\n\n    while (true) {\n      currentResult = applyToTokens(leftResult.remaining());\n\n      if (currentResult.isSuccess()) {\n        source = leftResult.source().to(currentResult.source());\n        leftResult = results.success(currentResult.value()(leftResult.value(), source), currentResult.remaining(), source);\n      } else if (currentResult.isFailure()) {\n        return leftResult;\n      } else {\n        return currentResult;\n      }\n    }\n  }\n\n  function applyToTokens(tokens) {\n    return rules.firstOf(\"infix\", infixRules.map(function (infix) {\n      return infix.rule;\n    }))(tokens);\n  }\n\n  return {\n    apply: apply,\n    untilExclusive: untilExclusive,\n    untilInclusive: untilInclusive\n  };\n}\n\nexports.infix = function (name, ruleBuilder) {\n  function map(func) {\n    return exports.infix(name, function (parser) {\n      var rule = ruleBuilder(parser);\n      return function (tokens) {\n        var result = rule(tokens);\n        return result.map(function (right) {\n          return function (left, source) {\n            return func(left, right, source);\n          };\n        });\n      };\n    });\n  }\n\n  return {\n    name: name,\n    ruleBuilder: ruleBuilder,\n    map: map\n  };\n}; // TODO: move into a sensible place and remove duplication\n\n\nvar lazyRule = function (ruleBuilder) {\n  var rule;\n  return function (input) {\n    if (!rule) {\n      rule = ruleBuilder();\n    }\n\n    return rule(input);\n  };\n};","map":{"version":3,"names":["rules","require","results","exports","parser","name","prefixRules","infixRuleBuilders","self","rule","leftAssociative","rightAssociative","infixRules","InfixRules","map","createInfixRule","prefixRule","firstOf","infixRuleBuilder","lazyRule","ruleBuilder","bind","createRule","untilExclusive","untilInclusive","apply","tokens","leftResult","isSuccess","slice","ruleNames","indexOf","currentResult","source","applyToTokens","remaining","to","success","value","isFailure","infix","func","result","right","left","input"],"sources":["E:/react-projects/new project/2022/converter/converter/node_modules/lop/lib/bottom-up.js"],"sourcesContent":["var rules = require(\"./rules\");\nvar results = require(\"./parsing-results\");\n\nexports.parser = function(name, prefixRules, infixRuleBuilders) {\n    var self = {\n        rule: rule,\n        leftAssociative: leftAssociative,\n        rightAssociative: rightAssociative\n    };\n    \n    var infixRules = new InfixRules(infixRuleBuilders.map(createInfixRule));\n    var prefixRule = rules.firstOf(name, prefixRules);\n    \n    function createInfixRule(infixRuleBuilder) {\n        return {\n            name: infixRuleBuilder.name,\n            rule: lazyRule(infixRuleBuilder.ruleBuilder.bind(null, self))\n        };\n    }\n    \n    function rule() {\n        return createRule(infixRules);\n    }\n    \n    function leftAssociative(name) {\n        return createRule(infixRules.untilExclusive(name));\n    }\n    \n    function rightAssociative(name) {\n        return createRule(infixRules.untilInclusive(name));\n    }\n    \n    function createRule(infixRules) {\n        return apply.bind(null, infixRules);\n    }\n    \n    function apply(infixRules, tokens) {\n        var leftResult = prefixRule(tokens);\n        if (leftResult.isSuccess()) {\n            return infixRules.apply(leftResult);\n        } else {\n            return leftResult;\n        }\n    }\n    \n    return self;\n};\n\nfunction InfixRules(infixRules) {\n    function untilExclusive(name) {\n        return new InfixRules(infixRules.slice(0, ruleNames().indexOf(name)));\n    }\n    \n    function untilInclusive(name) {\n        return new InfixRules(infixRules.slice(0, ruleNames().indexOf(name) + 1));\n    }\n    \n    function ruleNames() {\n        return infixRules.map(function(rule) {\n            return rule.name;\n        });\n    }\n    \n    function apply(leftResult) {\n        var currentResult;\n        var source;\n        while (true) {\n            currentResult = applyToTokens(leftResult.remaining());\n            if (currentResult.isSuccess()) {\n                source = leftResult.source().to(currentResult.source());\n                leftResult = results.success(\n                    currentResult.value()(leftResult.value(), source),\n                    currentResult.remaining(),\n                    source\n                )\n            } else if (currentResult.isFailure()) {\n                return leftResult;\n            } else {\n                return currentResult;\n            }\n        }\n    }\n    \n    function applyToTokens(tokens) {\n        return rules.firstOf(\"infix\", infixRules.map(function(infix) {\n            return infix.rule;\n        }))(tokens);\n    }\n    \n    return {\n        apply: apply,\n        untilExclusive: untilExclusive,\n        untilInclusive: untilInclusive\n    }\n}\n\nexports.infix = function(name, ruleBuilder) {\n    function map(func) {\n        return exports.infix(name, function(parser) {\n            var rule = ruleBuilder(parser);\n            return function(tokens) {\n                var result = rule(tokens);\n                return result.map(function(right) {\n                    return function(left, source) {\n                        return func(left, right, source);\n                    };\n                });\n            };\n        });\n    }\n    \n    return {\n        name: name,\n        ruleBuilder: ruleBuilder,\n        map: map\n    };\n}\n\n// TODO: move into a sensible place and remove duplication\nvar lazyRule = function(ruleBuilder) {\n    var rule;\n    return function(input) {\n        if (!rule) {\n            rule = ruleBuilder();\n        }\n        return rule(input);\n    };\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}