{"ast":null,"code":"// Some functions take a variable number of arguments, or a few expected\n// arguments at the beginning and then a variable number of values to operate\n// on. This helper accumulates all remaining arguments past the function’s\n// argument length (or an explicit `startIndex`), into an array that becomes\n// the last argument. Similar to ES6’s \"rest parameter\".\nexport default function restArguments(func, startIndex) {\n  startIndex = startIndex == null ? func.length - 1 : +startIndex;\n  return function () {\n    var length = Math.max(arguments.length - startIndex, 0),\n        rest = Array(length),\n        index = 0;\n\n    for (; index < length; index++) {\n      rest[index] = arguments[index + startIndex];\n    }\n\n    switch (startIndex) {\n      case 0:\n        return func.call(this, rest);\n\n      case 1:\n        return func.call(this, arguments[0], rest);\n\n      case 2:\n        return func.call(this, arguments[0], arguments[1], rest);\n    }\n\n    var args = Array(startIndex + 1);\n\n    for (index = 0; index < startIndex; index++) {\n      args[index] = arguments[index];\n    }\n\n    args[startIndex] = rest;\n    return func.apply(this, args);\n  };\n}","map":{"version":3,"names":["restArguments","func","startIndex","length","Math","max","arguments","rest","Array","index","call","args","apply"],"sources":["E:/react-projects/new project/2022/converter/converter/node_modules/underscore/modules/restArguments.js"],"sourcesContent":["// Some functions take a variable number of arguments, or a few expected\n// arguments at the beginning and then a variable number of values to operate\n// on. This helper accumulates all remaining arguments past the function’s\n// argument length (or an explicit `startIndex`), into an array that becomes\n// the last argument. Similar to ES6’s \"rest parameter\".\nexport default function restArguments(func, startIndex) {\n  startIndex = startIndex == null ? func.length - 1 : +startIndex;\n  return function() {\n    var length = Math.max(arguments.length - startIndex, 0),\n        rest = Array(length),\n        index = 0;\n    for (; index < length; index++) {\n      rest[index] = arguments[index + startIndex];\n    }\n    switch (startIndex) {\n      case 0: return func.call(this, rest);\n      case 1: return func.call(this, arguments[0], rest);\n      case 2: return func.call(this, arguments[0], arguments[1], rest);\n    }\n    var args = Array(startIndex + 1);\n    for (index = 0; index < startIndex; index++) {\n      args[index] = arguments[index];\n    }\n    args[startIndex] = rest;\n    return func.apply(this, args);\n  };\n}\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA,eAAe,SAASA,aAAT,CAAuBC,IAAvB,EAA6BC,UAA7B,EAAyC;EACtDA,UAAU,GAAGA,UAAU,IAAI,IAAd,GAAqBD,IAAI,CAACE,MAAL,GAAc,CAAnC,GAAuC,CAACD,UAArD;EACA,OAAO,YAAW;IAChB,IAAIC,MAAM,GAAGC,IAAI,CAACC,GAAL,CAASC,SAAS,CAACH,MAAV,GAAmBD,UAA5B,EAAwC,CAAxC,CAAb;IAAA,IACIK,IAAI,GAAGC,KAAK,CAACL,MAAD,CADhB;IAAA,IAEIM,KAAK,GAAG,CAFZ;;IAGA,OAAOA,KAAK,GAAGN,MAAf,EAAuBM,KAAK,EAA5B,EAAgC;MAC9BF,IAAI,CAACE,KAAD,CAAJ,GAAcH,SAAS,CAACG,KAAK,GAAGP,UAAT,CAAvB;IACD;;IACD,QAAQA,UAAR;MACE,KAAK,CAAL;QAAQ,OAAOD,IAAI,CAACS,IAAL,CAAU,IAAV,EAAgBH,IAAhB,CAAP;;MACR,KAAK,CAAL;QAAQ,OAAON,IAAI,CAACS,IAAL,CAAU,IAAV,EAAgBJ,SAAS,CAAC,CAAD,CAAzB,EAA8BC,IAA9B,CAAP;;MACR,KAAK,CAAL;QAAQ,OAAON,IAAI,CAACS,IAAL,CAAU,IAAV,EAAgBJ,SAAS,CAAC,CAAD,CAAzB,EAA8BA,SAAS,CAAC,CAAD,CAAvC,EAA4CC,IAA5C,CAAP;IAHV;;IAKA,IAAII,IAAI,GAAGH,KAAK,CAACN,UAAU,GAAG,CAAd,CAAhB;;IACA,KAAKO,KAAK,GAAG,CAAb,EAAgBA,KAAK,GAAGP,UAAxB,EAAoCO,KAAK,EAAzC,EAA6C;MAC3CE,IAAI,CAACF,KAAD,CAAJ,GAAcH,SAAS,CAACG,KAAD,CAAvB;IACD;;IACDE,IAAI,CAACT,UAAD,CAAJ,GAAmBK,IAAnB;IACA,OAAON,IAAI,CAACW,KAAL,CAAW,IAAX,EAAiBD,IAAjB,CAAP;EACD,CAlBD;AAmBD"},"metadata":{},"sourceType":"module"}