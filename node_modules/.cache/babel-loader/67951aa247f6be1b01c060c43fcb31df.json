{"ast":null,"code":"// Generated by CoffeeScript 1.12.7\n(function () {\n  var XMLDTDAttList,\n      XMLNode,\n      extend = function (child, parent) {\n    for (var key in parent) {\n      if (hasProp.call(parent, key)) child[key] = parent[key];\n    }\n\n    function ctor() {\n      this.constructor = child;\n    }\n\n    ctor.prototype = parent.prototype;\n    child.prototype = new ctor();\n    child.__super__ = parent.prototype;\n    return child;\n  },\n      hasProp = {}.hasOwnProperty;\n\n  XMLNode = require('./XMLNode');\n\n  module.exports = XMLDTDAttList = function (superClass) {\n    extend(XMLDTDAttList, superClass);\n\n    function XMLDTDAttList(parent, elementName, attributeName, attributeType, defaultValueType, defaultValue) {\n      XMLDTDAttList.__super__.constructor.call(this, parent);\n\n      if (elementName == null) {\n        throw new Error(\"Missing DTD element name. \" + this.debugInfo());\n      }\n\n      if (attributeName == null) {\n        throw new Error(\"Missing DTD attribute name. \" + this.debugInfo(elementName));\n      }\n\n      if (!attributeType) {\n        throw new Error(\"Missing DTD attribute type. \" + this.debugInfo(elementName));\n      }\n\n      if (!defaultValueType) {\n        throw new Error(\"Missing DTD attribute default. \" + this.debugInfo(elementName));\n      }\n\n      if (defaultValueType.indexOf('#') !== 0) {\n        defaultValueType = '#' + defaultValueType;\n      }\n\n      if (!defaultValueType.match(/^(#REQUIRED|#IMPLIED|#FIXED|#DEFAULT)$/)) {\n        throw new Error(\"Invalid default value type; expected: #REQUIRED, #IMPLIED, #FIXED or #DEFAULT. \" + this.debugInfo(elementName));\n      }\n\n      if (defaultValue && !defaultValueType.match(/^(#FIXED|#DEFAULT)$/)) {\n        throw new Error(\"Default value only applies to #FIXED or #DEFAULT. \" + this.debugInfo(elementName));\n      }\n\n      this.elementName = this.stringify.eleName(elementName);\n      this.attributeName = this.stringify.attName(attributeName);\n      this.attributeType = this.stringify.dtdAttType(attributeType);\n      this.defaultValue = this.stringify.dtdAttDefault(defaultValue);\n      this.defaultValueType = defaultValueType;\n    }\n\n    XMLDTDAttList.prototype.toString = function (options) {\n      return this.options.writer.set(options).dtdAttList(this);\n    };\n\n    return XMLDTDAttList;\n  }(XMLNode);\n}).call(this);","map":{"version":3,"names":["XMLDTDAttList","XMLNode","extend","child","parent","key","hasProp","call","ctor","constructor","prototype","__super__","hasOwnProperty","require","module","exports","superClass","elementName","attributeName","attributeType","defaultValueType","defaultValue","Error","debugInfo","indexOf","match","stringify","eleName","attName","dtdAttType","dtdAttDefault","toString","options","writer","set","dtdAttList"],"sources":["E:/react-projects/new project/2022/converter/converter/node_modules/xmlbuilder/lib/XMLDTDAttList.js"],"sourcesContent":["// Generated by CoffeeScript 1.12.7\n(function() {\n  var XMLDTDAttList, XMLNode,\n    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },\n    hasProp = {}.hasOwnProperty;\n\n  XMLNode = require('./XMLNode');\n\n  module.exports = XMLDTDAttList = (function(superClass) {\n    extend(XMLDTDAttList, superClass);\n\n    function XMLDTDAttList(parent, elementName, attributeName, attributeType, defaultValueType, defaultValue) {\n      XMLDTDAttList.__super__.constructor.call(this, parent);\n      if (elementName == null) {\n        throw new Error(\"Missing DTD element name. \" + this.debugInfo());\n      }\n      if (attributeName == null) {\n        throw new Error(\"Missing DTD attribute name. \" + this.debugInfo(elementName));\n      }\n      if (!attributeType) {\n        throw new Error(\"Missing DTD attribute type. \" + this.debugInfo(elementName));\n      }\n      if (!defaultValueType) {\n        throw new Error(\"Missing DTD attribute default. \" + this.debugInfo(elementName));\n      }\n      if (defaultValueType.indexOf('#') !== 0) {\n        defaultValueType = '#' + defaultValueType;\n      }\n      if (!defaultValueType.match(/^(#REQUIRED|#IMPLIED|#FIXED|#DEFAULT)$/)) {\n        throw new Error(\"Invalid default value type; expected: #REQUIRED, #IMPLIED, #FIXED or #DEFAULT. \" + this.debugInfo(elementName));\n      }\n      if (defaultValue && !defaultValueType.match(/^(#FIXED|#DEFAULT)$/)) {\n        throw new Error(\"Default value only applies to #FIXED or #DEFAULT. \" + this.debugInfo(elementName));\n      }\n      this.elementName = this.stringify.eleName(elementName);\n      this.attributeName = this.stringify.attName(attributeName);\n      this.attributeType = this.stringify.dtdAttType(attributeType);\n      this.defaultValue = this.stringify.dtdAttDefault(defaultValue);\n      this.defaultValueType = defaultValueType;\n    }\n\n    XMLDTDAttList.prototype.toString = function(options) {\n      return this.options.writer.set(options).dtdAttList(this);\n    };\n\n    return XMLDTDAttList;\n\n  })(XMLNode);\n\n}).call(this);\n"],"mappings":"AAAA;AACA,CAAC,YAAW;EACV,IAAIA,aAAJ;EAAA,IAAmBC,OAAnB;EAAA,IACEC,MAAM,GAAG,UAASC,KAAT,EAAgBC,MAAhB,EAAwB;IAAE,KAAK,IAAIC,GAAT,IAAgBD,MAAhB,EAAwB;MAAE,IAAIE,OAAO,CAACC,IAAR,CAAaH,MAAb,EAAqBC,GAArB,CAAJ,EAA+BF,KAAK,CAACE,GAAD,CAAL,GAAaD,MAAM,CAACC,GAAD,CAAnB;IAA2B;;IAAC,SAASG,IAAT,GAAgB;MAAE,KAAKC,WAAL,GAAmBN,KAAnB;IAA2B;;IAACK,IAAI,CAACE,SAAL,GAAiBN,MAAM,CAACM,SAAxB;IAAmCP,KAAK,CAACO,SAAN,GAAkB,IAAIF,IAAJ,EAAlB;IAA8BL,KAAK,CAACQ,SAAN,GAAkBP,MAAM,CAACM,SAAzB;IAAoC,OAAOP,KAAP;EAAe,CAD5R;EAAA,IAEEG,OAAO,GAAG,GAAGM,cAFf;;EAIAX,OAAO,GAAGY,OAAO,CAAC,WAAD,CAAjB;;EAEAC,MAAM,CAACC,OAAP,GAAiBf,aAAa,GAAI,UAASgB,UAAT,EAAqB;IACrDd,MAAM,CAACF,aAAD,EAAgBgB,UAAhB,CAAN;;IAEA,SAAShB,aAAT,CAAuBI,MAAvB,EAA+Ba,WAA/B,EAA4CC,aAA5C,EAA2DC,aAA3D,EAA0EC,gBAA1E,EAA4FC,YAA5F,EAA0G;MACxGrB,aAAa,CAACW,SAAd,CAAwBF,WAAxB,CAAoCF,IAApC,CAAyC,IAAzC,EAA+CH,MAA/C;;MACA,IAAIa,WAAW,IAAI,IAAnB,EAAyB;QACvB,MAAM,IAAIK,KAAJ,CAAU,+BAA+B,KAAKC,SAAL,EAAzC,CAAN;MACD;;MACD,IAAIL,aAAa,IAAI,IAArB,EAA2B;QACzB,MAAM,IAAII,KAAJ,CAAU,iCAAiC,KAAKC,SAAL,CAAeN,WAAf,CAA3C,CAAN;MACD;;MACD,IAAI,CAACE,aAAL,EAAoB;QAClB,MAAM,IAAIG,KAAJ,CAAU,iCAAiC,KAAKC,SAAL,CAAeN,WAAf,CAA3C,CAAN;MACD;;MACD,IAAI,CAACG,gBAAL,EAAuB;QACrB,MAAM,IAAIE,KAAJ,CAAU,oCAAoC,KAAKC,SAAL,CAAeN,WAAf,CAA9C,CAAN;MACD;;MACD,IAAIG,gBAAgB,CAACI,OAAjB,CAAyB,GAAzB,MAAkC,CAAtC,EAAyC;QACvCJ,gBAAgB,GAAG,MAAMA,gBAAzB;MACD;;MACD,IAAI,CAACA,gBAAgB,CAACK,KAAjB,CAAuB,wCAAvB,CAAL,EAAuE;QACrE,MAAM,IAAIH,KAAJ,CAAU,oFAAoF,KAAKC,SAAL,CAAeN,WAAf,CAA9F,CAAN;MACD;;MACD,IAAII,YAAY,IAAI,CAACD,gBAAgB,CAACK,KAAjB,CAAuB,qBAAvB,CAArB,EAAoE;QAClE,MAAM,IAAIH,KAAJ,CAAU,uDAAuD,KAAKC,SAAL,CAAeN,WAAf,CAAjE,CAAN;MACD;;MACD,KAAKA,WAAL,GAAmB,KAAKS,SAAL,CAAeC,OAAf,CAAuBV,WAAvB,CAAnB;MACA,KAAKC,aAAL,GAAqB,KAAKQ,SAAL,CAAeE,OAAf,CAAuBV,aAAvB,CAArB;MACA,KAAKC,aAAL,GAAqB,KAAKO,SAAL,CAAeG,UAAf,CAA0BV,aAA1B,CAArB;MACA,KAAKE,YAAL,GAAoB,KAAKK,SAAL,CAAeI,aAAf,CAA6BT,YAA7B,CAApB;MACA,KAAKD,gBAAL,GAAwBA,gBAAxB;IACD;;IAEDpB,aAAa,CAACU,SAAd,CAAwBqB,QAAxB,GAAmC,UAASC,OAAT,EAAkB;MACnD,OAAO,KAAKA,OAAL,CAAaC,MAAb,CAAoBC,GAApB,CAAwBF,OAAxB,EAAiCG,UAAjC,CAA4C,IAA5C,CAAP;IACD,CAFD;;IAIA,OAAOnC,aAAP;EAED,CAvCgC,CAuC9BC,OAvC8B,CAAjC;AAyCD,CAhDD,EAgDGM,IAhDH,CAgDQ,IAhDR"},"metadata":{},"sourceType":"script"}