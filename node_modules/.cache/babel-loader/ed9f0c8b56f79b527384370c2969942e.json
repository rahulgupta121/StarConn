{"ast":null,"code":"var ast = require(\"./ast\");\n\nexports.freshElement = ast.freshElement;\nexports.nonFreshElement = ast.nonFreshElement;\nexports.elementWithTag = ast.elementWithTag;\nexports.text = ast.text;\nexports.forceWrite = ast.forceWrite;\nexports.simplify = require(\"./simplify\");\n\nfunction write(writer, nodes) {\n  nodes.forEach(function (node) {\n    writeNode(writer, node);\n  });\n}\n\nfunction writeNode(writer, node) {\n  toStrings[node.type](writer, node);\n}\n\nvar toStrings = {\n  element: generateElementString,\n  text: generateTextString,\n  forceWrite: function () {}\n};\n\nfunction generateElementString(writer, node) {\n  if (ast.isVoidElement(node)) {\n    writer.selfClosing(node.tag.tagName, node.tag.attributes);\n  } else {\n    writer.open(node.tag.tagName, node.tag.attributes);\n    write(writer, node.children);\n    writer.close(node.tag.tagName);\n  }\n}\n\nfunction generateTextString(writer, node) {\n  writer.text(node.value);\n}\n\nexports.write = write;","map":{"version":3,"names":["ast","require","exports","freshElement","nonFreshElement","elementWithTag","text","forceWrite","simplify","write","writer","nodes","forEach","node","writeNode","toStrings","type","element","generateElementString","generateTextString","isVoidElement","selfClosing","tag","tagName","attributes","open","children","close","value"],"sources":["E:/react-projects/new project/2022/converter/converter/node_modules/mammoth/lib/html/index.js"],"sourcesContent":["var ast = require(\"./ast\");\n\nexports.freshElement = ast.freshElement;\nexports.nonFreshElement = ast.nonFreshElement;\nexports.elementWithTag = ast.elementWithTag;\nexports.text = ast.text;\nexports.forceWrite = ast.forceWrite;\n\nexports.simplify = require(\"./simplify\");\n\nfunction write(writer, nodes) {\n    nodes.forEach(function(node) {\n        writeNode(writer, node);\n    });\n}\n\nfunction writeNode(writer, node) {\n    toStrings[node.type](writer, node);\n}\n\nvar toStrings = {\n    element: generateElementString,\n    text: generateTextString,\n    forceWrite: function() { }\n};\n\nfunction generateElementString(writer, node) {\n    if (ast.isVoidElement(node)) {\n        writer.selfClosing(node.tag.tagName, node.tag.attributes);\n    } else {\n        writer.open(node.tag.tagName, node.tag.attributes);\n        write(writer, node.children);\n        writer.close(node.tag.tagName);\n    }\n}\n\nfunction generateTextString(writer, node) {\n    writer.text(node.value);\n}\n\nexports.write = write;\n"],"mappings":"AAAA,IAAIA,GAAG,GAAGC,OAAO,CAAC,OAAD,CAAjB;;AAEAC,OAAO,CAACC,YAAR,GAAuBH,GAAG,CAACG,YAA3B;AACAD,OAAO,CAACE,eAAR,GAA0BJ,GAAG,CAACI,eAA9B;AACAF,OAAO,CAACG,cAAR,GAAyBL,GAAG,CAACK,cAA7B;AACAH,OAAO,CAACI,IAAR,GAAeN,GAAG,CAACM,IAAnB;AACAJ,OAAO,CAACK,UAAR,GAAqBP,GAAG,CAACO,UAAzB;AAEAL,OAAO,CAACM,QAAR,GAAmBP,OAAO,CAAC,YAAD,CAA1B;;AAEA,SAASQ,KAAT,CAAeC,MAAf,EAAuBC,KAAvB,EAA8B;EAC1BA,KAAK,CAACC,OAAN,CAAc,UAASC,IAAT,EAAe;IACzBC,SAAS,CAACJ,MAAD,EAASG,IAAT,CAAT;EACH,CAFD;AAGH;;AAED,SAASC,SAAT,CAAmBJ,MAAnB,EAA2BG,IAA3B,EAAiC;EAC7BE,SAAS,CAACF,IAAI,CAACG,IAAN,CAAT,CAAqBN,MAArB,EAA6BG,IAA7B;AACH;;AAED,IAAIE,SAAS,GAAG;EACZE,OAAO,EAAEC,qBADG;EAEZZ,IAAI,EAAEa,kBAFM;EAGZZ,UAAU,EAAE,YAAW,CAAG;AAHd,CAAhB;;AAMA,SAASW,qBAAT,CAA+BR,MAA/B,EAAuCG,IAAvC,EAA6C;EACzC,IAAIb,GAAG,CAACoB,aAAJ,CAAkBP,IAAlB,CAAJ,EAA6B;IACzBH,MAAM,CAACW,WAAP,CAAmBR,IAAI,CAACS,GAAL,CAASC,OAA5B,EAAqCV,IAAI,CAACS,GAAL,CAASE,UAA9C;EACH,CAFD,MAEO;IACHd,MAAM,CAACe,IAAP,CAAYZ,IAAI,CAACS,GAAL,CAASC,OAArB,EAA8BV,IAAI,CAACS,GAAL,CAASE,UAAvC;IACAf,KAAK,CAACC,MAAD,EAASG,IAAI,CAACa,QAAd,CAAL;IACAhB,MAAM,CAACiB,KAAP,CAAad,IAAI,CAACS,GAAL,CAASC,OAAtB;EACH;AACJ;;AAED,SAASJ,kBAAT,CAA4BT,MAA5B,EAAoCG,IAApC,EAA0C;EACtCH,MAAM,CAACJ,IAAP,CAAYO,IAAI,CAACe,KAAjB;AACH;;AAED1B,OAAO,CAACO,KAAR,GAAgBA,KAAhB"},"metadata":{},"sourceType":"script"}