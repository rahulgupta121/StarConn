{"ast":null,"code":"// Generated by CoffeeScript 1.12.7\n(function () {\n  var XMLCData,\n      XMLComment,\n      XMLDTDAttList,\n      XMLDTDElement,\n      XMLDTDEntity,\n      XMLDTDNotation,\n      XMLDeclaration,\n      XMLDocType,\n      XMLDummy,\n      XMLElement,\n      XMLProcessingInstruction,\n      XMLRaw,\n      XMLStringWriter,\n      XMLText,\n      XMLWriterBase,\n      extend = function (child, parent) {\n    for (var key in parent) {\n      if (hasProp.call(parent, key)) child[key] = parent[key];\n    }\n\n    function ctor() {\n      this.constructor = child;\n    }\n\n    ctor.prototype = parent.prototype;\n    child.prototype = new ctor();\n    child.__super__ = parent.prototype;\n    return child;\n  },\n      hasProp = {}.hasOwnProperty;\n\n  XMLDeclaration = require('./XMLDeclaration');\n  XMLDocType = require('./XMLDocType');\n  XMLCData = require('./XMLCData');\n  XMLComment = require('./XMLComment');\n  XMLElement = require('./XMLElement');\n  XMLRaw = require('./XMLRaw');\n  XMLText = require('./XMLText');\n  XMLProcessingInstruction = require('./XMLProcessingInstruction');\n  XMLDummy = require('./XMLDummy');\n  XMLDTDAttList = require('./XMLDTDAttList');\n  XMLDTDElement = require('./XMLDTDElement');\n  XMLDTDEntity = require('./XMLDTDEntity');\n  XMLDTDNotation = require('./XMLDTDNotation');\n  XMLWriterBase = require('./XMLWriterBase');\n\n  module.exports = XMLStringWriter = function (superClass) {\n    extend(XMLStringWriter, superClass);\n\n    function XMLStringWriter(options) {\n      XMLStringWriter.__super__.constructor.call(this, options);\n    }\n\n    XMLStringWriter.prototype.document = function (doc) {\n      var child, i, len, r, ref;\n      this.textispresent = false;\n      r = '';\n      ref = doc.children;\n\n      for (i = 0, len = ref.length; i < len; i++) {\n        child = ref[i];\n\n        if (child instanceof XMLDummy) {\n          continue;\n        }\n\n        r += function () {\n          switch (false) {\n            case !(child instanceof XMLDeclaration):\n              return this.declaration(child);\n\n            case !(child instanceof XMLDocType):\n              return this.docType(child);\n\n            case !(child instanceof XMLComment):\n              return this.comment(child);\n\n            case !(child instanceof XMLProcessingInstruction):\n              return this.processingInstruction(child);\n\n            default:\n              return this.element(child, 0);\n          }\n        }.call(this);\n      }\n\n      if (this.pretty && r.slice(-this.newline.length) === this.newline) {\n        r = r.slice(0, -this.newline.length);\n      }\n\n      return r;\n    };\n\n    XMLStringWriter.prototype.attribute = function (att) {\n      return ' ' + att.name + '=\"' + att.value + '\"';\n    };\n\n    XMLStringWriter.prototype.cdata = function (node, level) {\n      return this.space(level) + '<![CDATA[' + node.text + ']]>' + this.newline;\n    };\n\n    XMLStringWriter.prototype.comment = function (node, level) {\n      return this.space(level) + '<!-- ' + node.text + ' -->' + this.newline;\n    };\n\n    XMLStringWriter.prototype.declaration = function (node, level) {\n      var r;\n      r = this.space(level);\n      r += '<?xml version=\"' + node.version + '\"';\n\n      if (node.encoding != null) {\n        r += ' encoding=\"' + node.encoding + '\"';\n      }\n\n      if (node.standalone != null) {\n        r += ' standalone=\"' + node.standalone + '\"';\n      }\n\n      r += this.spacebeforeslash + '?>';\n      r += this.newline;\n      return r;\n    };\n\n    XMLStringWriter.prototype.docType = function (node, level) {\n      var child, i, len, r, ref;\n      level || (level = 0);\n      r = this.space(level);\n      r += '<!DOCTYPE ' + node.root().name;\n\n      if (node.pubID && node.sysID) {\n        r += ' PUBLIC \"' + node.pubID + '\" \"' + node.sysID + '\"';\n      } else if (node.sysID) {\n        r += ' SYSTEM \"' + node.sysID + '\"';\n      }\n\n      if (node.children.length > 0) {\n        r += ' [';\n        r += this.newline;\n        ref = node.children;\n\n        for (i = 0, len = ref.length; i < len; i++) {\n          child = ref[i];\n\n          r += function () {\n            switch (false) {\n              case !(child instanceof XMLDTDAttList):\n                return this.dtdAttList(child, level + 1);\n\n              case !(child instanceof XMLDTDElement):\n                return this.dtdElement(child, level + 1);\n\n              case !(child instanceof XMLDTDEntity):\n                return this.dtdEntity(child, level + 1);\n\n              case !(child instanceof XMLDTDNotation):\n                return this.dtdNotation(child, level + 1);\n\n              case !(child instanceof XMLCData):\n                return this.cdata(child, level + 1);\n\n              case !(child instanceof XMLComment):\n                return this.comment(child, level + 1);\n\n              case !(child instanceof XMLProcessingInstruction):\n                return this.processingInstruction(child, level + 1);\n\n              default:\n                throw new Error(\"Unknown DTD node type: \" + child.constructor.name);\n            }\n          }.call(this);\n        }\n\n        r += ']';\n      }\n\n      r += this.spacebeforeslash + '>';\n      r += this.newline;\n      return r;\n    };\n\n    XMLStringWriter.prototype.element = function (node, level) {\n      var att, child, i, j, len, len1, name, r, ref, ref1, ref2, space, textispresentwasset;\n      level || (level = 0);\n      textispresentwasset = false;\n\n      if (this.textispresent) {\n        this.newline = '';\n        this.pretty = false;\n      } else {\n        this.newline = this.newlinedefault;\n        this.pretty = this.prettydefault;\n      }\n\n      space = this.space(level);\n      r = '';\n      r += space + '<' + node.name;\n      ref = node.attributes;\n\n      for (name in ref) {\n        if (!hasProp.call(ref, name)) continue;\n        att = ref[name];\n        r += this.attribute(att);\n      }\n\n      if (node.children.length === 0 || node.children.every(function (e) {\n        return e.value === '';\n      })) {\n        if (this.allowEmpty) {\n          r += '></' + node.name + '>' + this.newline;\n        } else {\n          r += this.spacebeforeslash + '/>' + this.newline;\n        }\n      } else if (this.pretty && node.children.length === 1 && node.children[0].value != null) {\n        r += '>';\n        r += node.children[0].value;\n        r += '</' + node.name + '>' + this.newline;\n      } else {\n        if (this.dontprettytextnodes) {\n          ref1 = node.children;\n\n          for (i = 0, len = ref1.length; i < len; i++) {\n            child = ref1[i];\n\n            if (child.value != null) {\n              this.textispresent++;\n              textispresentwasset = true;\n              break;\n            }\n          }\n        }\n\n        if (this.textispresent) {\n          this.newline = '';\n          this.pretty = false;\n          space = this.space(level);\n        }\n\n        r += '>' + this.newline;\n        ref2 = node.children;\n\n        for (j = 0, len1 = ref2.length; j < len1; j++) {\n          child = ref2[j];\n\n          r += function () {\n            switch (false) {\n              case !(child instanceof XMLCData):\n                return this.cdata(child, level + 1);\n\n              case !(child instanceof XMLComment):\n                return this.comment(child, level + 1);\n\n              case !(child instanceof XMLElement):\n                return this.element(child, level + 1);\n\n              case !(child instanceof XMLRaw):\n                return this.raw(child, level + 1);\n\n              case !(child instanceof XMLText):\n                return this.text(child, level + 1);\n\n              case !(child instanceof XMLProcessingInstruction):\n                return this.processingInstruction(child, level + 1);\n\n              case !(child instanceof XMLDummy):\n                return '';\n\n              default:\n                throw new Error(\"Unknown XML node type: \" + child.constructor.name);\n            }\n          }.call(this);\n        }\n\n        if (textispresentwasset) {\n          this.textispresent--;\n        }\n\n        if (!this.textispresent) {\n          this.newline = this.newlinedefault;\n          this.pretty = this.prettydefault;\n        }\n\n        r += space + '</' + node.name + '>' + this.newline;\n      }\n\n      return r;\n    };\n\n    XMLStringWriter.prototype.processingInstruction = function (node, level) {\n      var r;\n      r = this.space(level) + '<?' + node.target;\n\n      if (node.value) {\n        r += ' ' + node.value;\n      }\n\n      r += this.spacebeforeslash + '?>' + this.newline;\n      return r;\n    };\n\n    XMLStringWriter.prototype.raw = function (node, level) {\n      return this.space(level) + node.value + this.newline;\n    };\n\n    XMLStringWriter.prototype.text = function (node, level) {\n      return this.space(level) + node.value + this.newline;\n    };\n\n    XMLStringWriter.prototype.dtdAttList = function (node, level) {\n      var r;\n      r = this.space(level) + '<!ATTLIST ' + node.elementName + ' ' + node.attributeName + ' ' + node.attributeType;\n\n      if (node.defaultValueType !== '#DEFAULT') {\n        r += ' ' + node.defaultValueType;\n      }\n\n      if (node.defaultValue) {\n        r += ' \"' + node.defaultValue + '\"';\n      }\n\n      r += this.spacebeforeslash + '>' + this.newline;\n      return r;\n    };\n\n    XMLStringWriter.prototype.dtdElement = function (node, level) {\n      return this.space(level) + '<!ELEMENT ' + node.name + ' ' + node.value + this.spacebeforeslash + '>' + this.newline;\n    };\n\n    XMLStringWriter.prototype.dtdEntity = function (node, level) {\n      var r;\n      r = this.space(level) + '<!ENTITY';\n\n      if (node.pe) {\n        r += ' %';\n      }\n\n      r += ' ' + node.name;\n\n      if (node.value) {\n        r += ' \"' + node.value + '\"';\n      } else {\n        if (node.pubID && node.sysID) {\n          r += ' PUBLIC \"' + node.pubID + '\" \"' + node.sysID + '\"';\n        } else if (node.sysID) {\n          r += ' SYSTEM \"' + node.sysID + '\"';\n        }\n\n        if (node.nData) {\n          r += ' NDATA ' + node.nData;\n        }\n      }\n\n      r += this.spacebeforeslash + '>' + this.newline;\n      return r;\n    };\n\n    XMLStringWriter.prototype.dtdNotation = function (node, level) {\n      var r;\n      r = this.space(level) + '<!NOTATION ' + node.name;\n\n      if (node.pubID && node.sysID) {\n        r += ' PUBLIC \"' + node.pubID + '\" \"' + node.sysID + '\"';\n      } else if (node.pubID) {\n        r += ' PUBLIC \"' + node.pubID + '\"';\n      } else if (node.sysID) {\n        r += ' SYSTEM \"' + node.sysID + '\"';\n      }\n\n      r += this.spacebeforeslash + '>' + this.newline;\n      return r;\n    };\n\n    XMLStringWriter.prototype.openNode = function (node, level) {\n      var att, name, r, ref;\n      level || (level = 0);\n\n      if (node instanceof XMLElement) {\n        r = this.space(level) + '<' + node.name;\n        ref = node.attributes;\n\n        for (name in ref) {\n          if (!hasProp.call(ref, name)) continue;\n          att = ref[name];\n          r += this.attribute(att);\n        }\n\n        r += (node.children ? '>' : '/>') + this.newline;\n        return r;\n      } else {\n        r = this.space(level) + '<!DOCTYPE ' + node.rootNodeName;\n\n        if (node.pubID && node.sysID) {\n          r += ' PUBLIC \"' + node.pubID + '\" \"' + node.sysID + '\"';\n        } else if (node.sysID) {\n          r += ' SYSTEM \"' + node.sysID + '\"';\n        }\n\n        r += (node.children ? ' [' : '>') + this.newline;\n        return r;\n      }\n    };\n\n    XMLStringWriter.prototype.closeNode = function (node, level) {\n      level || (level = 0);\n\n      switch (false) {\n        case !(node instanceof XMLElement):\n          return this.space(level) + '</' + node.name + '>' + this.newline;\n\n        case !(node instanceof XMLDocType):\n          return this.space(level) + ']>' + this.newline;\n      }\n    };\n\n    return XMLStringWriter;\n  }(XMLWriterBase);\n}).call(this);","map":{"version":3,"names":["XMLCData","XMLComment","XMLDTDAttList","XMLDTDElement","XMLDTDEntity","XMLDTDNotation","XMLDeclaration","XMLDocType","XMLDummy","XMLElement","XMLProcessingInstruction","XMLRaw","XMLStringWriter","XMLText","XMLWriterBase","extend","child","parent","key","hasProp","call","ctor","constructor","prototype","__super__","hasOwnProperty","require","module","exports","superClass","options","document","doc","i","len","r","ref","textispresent","children","length","declaration","docType","comment","processingInstruction","element","pretty","slice","newline","attribute","att","name","value","cdata","node","level","space","text","version","encoding","standalone","spacebeforeslash","root","pubID","sysID","dtdAttList","dtdElement","dtdEntity","dtdNotation","Error","j","len1","ref1","ref2","textispresentwasset","newlinedefault","prettydefault","attributes","every","e","allowEmpty","dontprettytextnodes","raw","target","elementName","attributeName","attributeType","defaultValueType","defaultValue","pe","nData","openNode","rootNodeName","closeNode"],"sources":["E:/react-projects/new project/2022/converter/converter/node_modules/xmlbuilder/lib/XMLStringWriter.js"],"sourcesContent":["// Generated by CoffeeScript 1.12.7\n(function() {\n  var XMLCData, XMLComment, XMLDTDAttList, XMLDTDElement, XMLDTDEntity, XMLDTDNotation, XMLDeclaration, XMLDocType, XMLDummy, XMLElement, XMLProcessingInstruction, XMLRaw, XMLStringWriter, XMLText, XMLWriterBase,\n    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },\n    hasProp = {}.hasOwnProperty;\n\n  XMLDeclaration = require('./XMLDeclaration');\n\n  XMLDocType = require('./XMLDocType');\n\n  XMLCData = require('./XMLCData');\n\n  XMLComment = require('./XMLComment');\n\n  XMLElement = require('./XMLElement');\n\n  XMLRaw = require('./XMLRaw');\n\n  XMLText = require('./XMLText');\n\n  XMLProcessingInstruction = require('./XMLProcessingInstruction');\n\n  XMLDummy = require('./XMLDummy');\n\n  XMLDTDAttList = require('./XMLDTDAttList');\n\n  XMLDTDElement = require('./XMLDTDElement');\n\n  XMLDTDEntity = require('./XMLDTDEntity');\n\n  XMLDTDNotation = require('./XMLDTDNotation');\n\n  XMLWriterBase = require('./XMLWriterBase');\n\n  module.exports = XMLStringWriter = (function(superClass) {\n    extend(XMLStringWriter, superClass);\n\n    function XMLStringWriter(options) {\n      XMLStringWriter.__super__.constructor.call(this, options);\n    }\n\n    XMLStringWriter.prototype.document = function(doc) {\n      var child, i, len, r, ref;\n      this.textispresent = false;\n      r = '';\n      ref = doc.children;\n      for (i = 0, len = ref.length; i < len; i++) {\n        child = ref[i];\n        if (child instanceof XMLDummy) {\n          continue;\n        }\n        r += (function() {\n          switch (false) {\n            case !(child instanceof XMLDeclaration):\n              return this.declaration(child);\n            case !(child instanceof XMLDocType):\n              return this.docType(child);\n            case !(child instanceof XMLComment):\n              return this.comment(child);\n            case !(child instanceof XMLProcessingInstruction):\n              return this.processingInstruction(child);\n            default:\n              return this.element(child, 0);\n          }\n        }).call(this);\n      }\n      if (this.pretty && r.slice(-this.newline.length) === this.newline) {\n        r = r.slice(0, -this.newline.length);\n      }\n      return r;\n    };\n\n    XMLStringWriter.prototype.attribute = function(att) {\n      return ' ' + att.name + '=\"' + att.value + '\"';\n    };\n\n    XMLStringWriter.prototype.cdata = function(node, level) {\n      return this.space(level) + '<![CDATA[' + node.text + ']]>' + this.newline;\n    };\n\n    XMLStringWriter.prototype.comment = function(node, level) {\n      return this.space(level) + '<!-- ' + node.text + ' -->' + this.newline;\n    };\n\n    XMLStringWriter.prototype.declaration = function(node, level) {\n      var r;\n      r = this.space(level);\n      r += '<?xml version=\"' + node.version + '\"';\n      if (node.encoding != null) {\n        r += ' encoding=\"' + node.encoding + '\"';\n      }\n      if (node.standalone != null) {\n        r += ' standalone=\"' + node.standalone + '\"';\n      }\n      r += this.spacebeforeslash + '?>';\n      r += this.newline;\n      return r;\n    };\n\n    XMLStringWriter.prototype.docType = function(node, level) {\n      var child, i, len, r, ref;\n      level || (level = 0);\n      r = this.space(level);\n      r += '<!DOCTYPE ' + node.root().name;\n      if (node.pubID && node.sysID) {\n        r += ' PUBLIC \"' + node.pubID + '\" \"' + node.sysID + '\"';\n      } else if (node.sysID) {\n        r += ' SYSTEM \"' + node.sysID + '\"';\n      }\n      if (node.children.length > 0) {\n        r += ' [';\n        r += this.newline;\n        ref = node.children;\n        for (i = 0, len = ref.length; i < len; i++) {\n          child = ref[i];\n          r += (function() {\n            switch (false) {\n              case !(child instanceof XMLDTDAttList):\n                return this.dtdAttList(child, level + 1);\n              case !(child instanceof XMLDTDElement):\n                return this.dtdElement(child, level + 1);\n              case !(child instanceof XMLDTDEntity):\n                return this.dtdEntity(child, level + 1);\n              case !(child instanceof XMLDTDNotation):\n                return this.dtdNotation(child, level + 1);\n              case !(child instanceof XMLCData):\n                return this.cdata(child, level + 1);\n              case !(child instanceof XMLComment):\n                return this.comment(child, level + 1);\n              case !(child instanceof XMLProcessingInstruction):\n                return this.processingInstruction(child, level + 1);\n              default:\n                throw new Error(\"Unknown DTD node type: \" + child.constructor.name);\n            }\n          }).call(this);\n        }\n        r += ']';\n      }\n      r += this.spacebeforeslash + '>';\n      r += this.newline;\n      return r;\n    };\n\n    XMLStringWriter.prototype.element = function(node, level) {\n      var att, child, i, j, len, len1, name, r, ref, ref1, ref2, space, textispresentwasset;\n      level || (level = 0);\n      textispresentwasset = false;\n      if (this.textispresent) {\n        this.newline = '';\n        this.pretty = false;\n      } else {\n        this.newline = this.newlinedefault;\n        this.pretty = this.prettydefault;\n      }\n      space = this.space(level);\n      r = '';\n      r += space + '<' + node.name;\n      ref = node.attributes;\n      for (name in ref) {\n        if (!hasProp.call(ref, name)) continue;\n        att = ref[name];\n        r += this.attribute(att);\n      }\n      if (node.children.length === 0 || node.children.every(function(e) {\n        return e.value === '';\n      })) {\n        if (this.allowEmpty) {\n          r += '></' + node.name + '>' + this.newline;\n        } else {\n          r += this.spacebeforeslash + '/>' + this.newline;\n        }\n      } else if (this.pretty && node.children.length === 1 && (node.children[0].value != null)) {\n        r += '>';\n        r += node.children[0].value;\n        r += '</' + node.name + '>' + this.newline;\n      } else {\n        if (this.dontprettytextnodes) {\n          ref1 = node.children;\n          for (i = 0, len = ref1.length; i < len; i++) {\n            child = ref1[i];\n            if (child.value != null) {\n              this.textispresent++;\n              textispresentwasset = true;\n              break;\n            }\n          }\n        }\n        if (this.textispresent) {\n          this.newline = '';\n          this.pretty = false;\n          space = this.space(level);\n        }\n        r += '>' + this.newline;\n        ref2 = node.children;\n        for (j = 0, len1 = ref2.length; j < len1; j++) {\n          child = ref2[j];\n          r += (function() {\n            switch (false) {\n              case !(child instanceof XMLCData):\n                return this.cdata(child, level + 1);\n              case !(child instanceof XMLComment):\n                return this.comment(child, level + 1);\n              case !(child instanceof XMLElement):\n                return this.element(child, level + 1);\n              case !(child instanceof XMLRaw):\n                return this.raw(child, level + 1);\n              case !(child instanceof XMLText):\n                return this.text(child, level + 1);\n              case !(child instanceof XMLProcessingInstruction):\n                return this.processingInstruction(child, level + 1);\n              case !(child instanceof XMLDummy):\n                return '';\n              default:\n                throw new Error(\"Unknown XML node type: \" + child.constructor.name);\n            }\n          }).call(this);\n        }\n        if (textispresentwasset) {\n          this.textispresent--;\n        }\n        if (!this.textispresent) {\n          this.newline = this.newlinedefault;\n          this.pretty = this.prettydefault;\n        }\n        r += space + '</' + node.name + '>' + this.newline;\n      }\n      return r;\n    };\n\n    XMLStringWriter.prototype.processingInstruction = function(node, level) {\n      var r;\n      r = this.space(level) + '<?' + node.target;\n      if (node.value) {\n        r += ' ' + node.value;\n      }\n      r += this.spacebeforeslash + '?>' + this.newline;\n      return r;\n    };\n\n    XMLStringWriter.prototype.raw = function(node, level) {\n      return this.space(level) + node.value + this.newline;\n    };\n\n    XMLStringWriter.prototype.text = function(node, level) {\n      return this.space(level) + node.value + this.newline;\n    };\n\n    XMLStringWriter.prototype.dtdAttList = function(node, level) {\n      var r;\n      r = this.space(level) + '<!ATTLIST ' + node.elementName + ' ' + node.attributeName + ' ' + node.attributeType;\n      if (node.defaultValueType !== '#DEFAULT') {\n        r += ' ' + node.defaultValueType;\n      }\n      if (node.defaultValue) {\n        r += ' \"' + node.defaultValue + '\"';\n      }\n      r += this.spacebeforeslash + '>' + this.newline;\n      return r;\n    };\n\n    XMLStringWriter.prototype.dtdElement = function(node, level) {\n      return this.space(level) + '<!ELEMENT ' + node.name + ' ' + node.value + this.spacebeforeslash + '>' + this.newline;\n    };\n\n    XMLStringWriter.prototype.dtdEntity = function(node, level) {\n      var r;\n      r = this.space(level) + '<!ENTITY';\n      if (node.pe) {\n        r += ' %';\n      }\n      r += ' ' + node.name;\n      if (node.value) {\n        r += ' \"' + node.value + '\"';\n      } else {\n        if (node.pubID && node.sysID) {\n          r += ' PUBLIC \"' + node.pubID + '\" \"' + node.sysID + '\"';\n        } else if (node.sysID) {\n          r += ' SYSTEM \"' + node.sysID + '\"';\n        }\n        if (node.nData) {\n          r += ' NDATA ' + node.nData;\n        }\n      }\n      r += this.spacebeforeslash + '>' + this.newline;\n      return r;\n    };\n\n    XMLStringWriter.prototype.dtdNotation = function(node, level) {\n      var r;\n      r = this.space(level) + '<!NOTATION ' + node.name;\n      if (node.pubID && node.sysID) {\n        r += ' PUBLIC \"' + node.pubID + '\" \"' + node.sysID + '\"';\n      } else if (node.pubID) {\n        r += ' PUBLIC \"' + node.pubID + '\"';\n      } else if (node.sysID) {\n        r += ' SYSTEM \"' + node.sysID + '\"';\n      }\n      r += this.spacebeforeslash + '>' + this.newline;\n      return r;\n    };\n\n    XMLStringWriter.prototype.openNode = function(node, level) {\n      var att, name, r, ref;\n      level || (level = 0);\n      if (node instanceof XMLElement) {\n        r = this.space(level) + '<' + node.name;\n        ref = node.attributes;\n        for (name in ref) {\n          if (!hasProp.call(ref, name)) continue;\n          att = ref[name];\n          r += this.attribute(att);\n        }\n        r += (node.children ? '>' : '/>') + this.newline;\n        return r;\n      } else {\n        r = this.space(level) + '<!DOCTYPE ' + node.rootNodeName;\n        if (node.pubID && node.sysID) {\n          r += ' PUBLIC \"' + node.pubID + '\" \"' + node.sysID + '\"';\n        } else if (node.sysID) {\n          r += ' SYSTEM \"' + node.sysID + '\"';\n        }\n        r += (node.children ? ' [' : '>') + this.newline;\n        return r;\n      }\n    };\n\n    XMLStringWriter.prototype.closeNode = function(node, level) {\n      level || (level = 0);\n      switch (false) {\n        case !(node instanceof XMLElement):\n          return this.space(level) + '</' + node.name + '>' + this.newline;\n        case !(node instanceof XMLDocType):\n          return this.space(level) + ']>' + this.newline;\n      }\n    };\n\n    return XMLStringWriter;\n\n  })(XMLWriterBase);\n\n}).call(this);\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}