{"ast":null,"code":"var documents = require(\"../documents\");\n\nvar Result = require(\"../results\").Result;\n\nfunction createCommentsReader(bodyReader) {\n  function readCommentsXml(element) {\n    return Result.combine(element.getElementsByTagName(\"w:comment\").map(readCommentElement));\n  }\n\n  function readCommentElement(element) {\n    var id = element.attributes[\"w:id\"];\n\n    function readOptionalAttribute(name) {\n      return (element.attributes[name] || \"\").trim() || null;\n    }\n\n    return bodyReader.readXmlElements(element.children).map(function (body) {\n      return documents.comment({\n        commentId: id,\n        body: body,\n        authorName: readOptionalAttribute(\"w:author\"),\n        authorInitials: readOptionalAttribute(\"w:initials\")\n      });\n    });\n  }\n\n  return readCommentsXml;\n}\n\nexports.createCommentsReader = createCommentsReader;","map":{"version":3,"names":["documents","require","Result","createCommentsReader","bodyReader","readCommentsXml","element","combine","getElementsByTagName","map","readCommentElement","id","attributes","readOptionalAttribute","name","trim","readXmlElements","children","body","comment","commentId","authorName","authorInitials","exports"],"sources":["E:/react-projects/new project/2022/converter/converter/node_modules/mammoth/lib/docx/comments-reader.js"],"sourcesContent":["var documents = require(\"../documents\");\nvar Result = require(\"../results\").Result;\n\nfunction createCommentsReader(bodyReader) {\n    function readCommentsXml(element) {\n        return Result.combine(element.getElementsByTagName(\"w:comment\")\n            .map(readCommentElement));\n    }\n\n    function readCommentElement(element) {\n        var id = element.attributes[\"w:id\"];\n\n        function readOptionalAttribute(name) {\n            return (element.attributes[name] || \"\").trim() || null;\n        }\n\n        return bodyReader.readXmlElements(element.children)\n            .map(function(body) {\n                return documents.comment({\n                    commentId: id,\n                    body: body,\n                    authorName: readOptionalAttribute(\"w:author\"),\n                    authorInitials: readOptionalAttribute(\"w:initials\")\n                });\n            });\n    }\n    \n    return readCommentsXml;\n}\n\nexports.createCommentsReader = createCommentsReader;\n"],"mappings":"AAAA,IAAIA,SAAS,GAAGC,OAAO,CAAC,cAAD,CAAvB;;AACA,IAAIC,MAAM,GAAGD,OAAO,CAAC,YAAD,CAAP,CAAsBC,MAAnC;;AAEA,SAASC,oBAAT,CAA8BC,UAA9B,EAA0C;EACtC,SAASC,eAAT,CAAyBC,OAAzB,EAAkC;IAC9B,OAAOJ,MAAM,CAACK,OAAP,CAAeD,OAAO,CAACE,oBAAR,CAA6B,WAA7B,EACjBC,GADiB,CACbC,kBADa,CAAf,CAAP;EAEH;;EAED,SAASA,kBAAT,CAA4BJ,OAA5B,EAAqC;IACjC,IAAIK,EAAE,GAAGL,OAAO,CAACM,UAAR,CAAmB,MAAnB,CAAT;;IAEA,SAASC,qBAAT,CAA+BC,IAA/B,EAAqC;MACjC,OAAO,CAACR,OAAO,CAACM,UAAR,CAAmBE,IAAnB,KAA4B,EAA7B,EAAiCC,IAAjC,MAA2C,IAAlD;IACH;;IAED,OAAOX,UAAU,CAACY,eAAX,CAA2BV,OAAO,CAACW,QAAnC,EACFR,GADE,CACE,UAASS,IAAT,EAAe;MAChB,OAAOlB,SAAS,CAACmB,OAAV,CAAkB;QACrBC,SAAS,EAAET,EADU;QAErBO,IAAI,EAAEA,IAFe;QAGrBG,UAAU,EAAER,qBAAqB,CAAC,UAAD,CAHZ;QAIrBS,cAAc,EAAET,qBAAqB,CAAC,YAAD;MAJhB,CAAlB,CAAP;IAMH,CARE,CAAP;EASH;;EAED,OAAOR,eAAP;AACH;;AAEDkB,OAAO,CAACpB,oBAAR,GAA+BA,oBAA/B"},"metadata":{},"sourceType":"script"}