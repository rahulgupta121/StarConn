{"ast":null,"code":"// Generated by CoffeeScript 1.12.7\n(function () {\n  var XMLAttribute,\n      XMLElement,\n      XMLNode,\n      getValue,\n      isFunction,\n      isObject,\n      ref,\n      extend = function (child, parent) {\n    for (var key in parent) {\n      if (hasProp.call(parent, key)) child[key] = parent[key];\n    }\n\n    function ctor() {\n      this.constructor = child;\n    }\n\n    ctor.prototype = parent.prototype;\n    child.prototype = new ctor();\n    child.__super__ = parent.prototype;\n    return child;\n  },\n      hasProp = {}.hasOwnProperty;\n\n  ref = require('./Utility'), isObject = ref.isObject, isFunction = ref.isFunction, getValue = ref.getValue;\n  XMLNode = require('./XMLNode');\n  XMLAttribute = require('./XMLAttribute');\n\n  module.exports = XMLElement = function (superClass) {\n    extend(XMLElement, superClass);\n\n    function XMLElement(parent, name, attributes) {\n      XMLElement.__super__.constructor.call(this, parent);\n\n      if (name == null) {\n        throw new Error(\"Missing element name. \" + this.debugInfo());\n      }\n\n      this.name = this.stringify.eleName(name);\n      this.attributes = {};\n\n      if (attributes != null) {\n        this.attribute(attributes);\n      }\n\n      if (parent.isDocument) {\n        this.isRoot = true;\n        this.documentObject = parent;\n        parent.rootObject = this;\n      }\n    }\n\n    XMLElement.prototype.clone = function () {\n      var att, attName, clonedSelf, ref1;\n      clonedSelf = Object.create(this);\n\n      if (clonedSelf.isRoot) {\n        clonedSelf.documentObject = null;\n      }\n\n      clonedSelf.attributes = {};\n      ref1 = this.attributes;\n\n      for (attName in ref1) {\n        if (!hasProp.call(ref1, attName)) continue;\n        att = ref1[attName];\n        clonedSelf.attributes[attName] = att.clone();\n      }\n\n      clonedSelf.children = [];\n      this.children.forEach(function (child) {\n        var clonedChild;\n        clonedChild = child.clone();\n        clonedChild.parent = clonedSelf;\n        return clonedSelf.children.push(clonedChild);\n      });\n      return clonedSelf;\n    };\n\n    XMLElement.prototype.attribute = function (name, value) {\n      var attName, attValue;\n\n      if (name != null) {\n        name = getValue(name);\n      }\n\n      if (isObject(name)) {\n        for (attName in name) {\n          if (!hasProp.call(name, attName)) continue;\n          attValue = name[attName];\n          this.attribute(attName, attValue);\n        }\n      } else {\n        if (isFunction(value)) {\n          value = value.apply();\n        }\n\n        if (!this.options.skipNullAttributes || value != null) {\n          this.attributes[name] = new XMLAttribute(this, name, value);\n        }\n      }\n\n      return this;\n    };\n\n    XMLElement.prototype.removeAttribute = function (name) {\n      var attName, i, len;\n\n      if (name == null) {\n        throw new Error(\"Missing attribute name. \" + this.debugInfo());\n      }\n\n      name = getValue(name);\n\n      if (Array.isArray(name)) {\n        for (i = 0, len = name.length; i < len; i++) {\n          attName = name[i];\n          delete this.attributes[attName];\n        }\n      } else {\n        delete this.attributes[name];\n      }\n\n      return this;\n    };\n\n    XMLElement.prototype.toString = function (options) {\n      return this.options.writer.set(options).element(this);\n    };\n\n    XMLElement.prototype.att = function (name, value) {\n      return this.attribute(name, value);\n    };\n\n    XMLElement.prototype.a = function (name, value) {\n      return this.attribute(name, value);\n    };\n\n    return XMLElement;\n  }(XMLNode);\n}).call(this);","map":{"version":3,"names":["XMLAttribute","XMLElement","XMLNode","getValue","isFunction","isObject","ref","extend","child","parent","key","hasProp","call","ctor","constructor","prototype","__super__","hasOwnProperty","require","module","exports","superClass","name","attributes","Error","debugInfo","stringify","eleName","attribute","isDocument","isRoot","documentObject","rootObject","clone","att","attName","clonedSelf","ref1","Object","create","children","forEach","clonedChild","push","value","attValue","apply","options","skipNullAttributes","removeAttribute","i","len","Array","isArray","length","toString","writer","set","element","a"],"sources":["E:/react-projects/new project/2022/converter/converter/node_modules/xmlbuilder/lib/XMLElement.js"],"sourcesContent":["// Generated by CoffeeScript 1.12.7\n(function() {\n  var XMLAttribute, XMLElement, XMLNode, getValue, isFunction, isObject, ref,\n    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },\n    hasProp = {}.hasOwnProperty;\n\n  ref = require('./Utility'), isObject = ref.isObject, isFunction = ref.isFunction, getValue = ref.getValue;\n\n  XMLNode = require('./XMLNode');\n\n  XMLAttribute = require('./XMLAttribute');\n\n  module.exports = XMLElement = (function(superClass) {\n    extend(XMLElement, superClass);\n\n    function XMLElement(parent, name, attributes) {\n      XMLElement.__super__.constructor.call(this, parent);\n      if (name == null) {\n        throw new Error(\"Missing element name. \" + this.debugInfo());\n      }\n      this.name = this.stringify.eleName(name);\n      this.attributes = {};\n      if (attributes != null) {\n        this.attribute(attributes);\n      }\n      if (parent.isDocument) {\n        this.isRoot = true;\n        this.documentObject = parent;\n        parent.rootObject = this;\n      }\n    }\n\n    XMLElement.prototype.clone = function() {\n      var att, attName, clonedSelf, ref1;\n      clonedSelf = Object.create(this);\n      if (clonedSelf.isRoot) {\n        clonedSelf.documentObject = null;\n      }\n      clonedSelf.attributes = {};\n      ref1 = this.attributes;\n      for (attName in ref1) {\n        if (!hasProp.call(ref1, attName)) continue;\n        att = ref1[attName];\n        clonedSelf.attributes[attName] = att.clone();\n      }\n      clonedSelf.children = [];\n      this.children.forEach(function(child) {\n        var clonedChild;\n        clonedChild = child.clone();\n        clonedChild.parent = clonedSelf;\n        return clonedSelf.children.push(clonedChild);\n      });\n      return clonedSelf;\n    };\n\n    XMLElement.prototype.attribute = function(name, value) {\n      var attName, attValue;\n      if (name != null) {\n        name = getValue(name);\n      }\n      if (isObject(name)) {\n        for (attName in name) {\n          if (!hasProp.call(name, attName)) continue;\n          attValue = name[attName];\n          this.attribute(attName, attValue);\n        }\n      } else {\n        if (isFunction(value)) {\n          value = value.apply();\n        }\n        if (!this.options.skipNullAttributes || (value != null)) {\n          this.attributes[name] = new XMLAttribute(this, name, value);\n        }\n      }\n      return this;\n    };\n\n    XMLElement.prototype.removeAttribute = function(name) {\n      var attName, i, len;\n      if (name == null) {\n        throw new Error(\"Missing attribute name. \" + this.debugInfo());\n      }\n      name = getValue(name);\n      if (Array.isArray(name)) {\n        for (i = 0, len = name.length; i < len; i++) {\n          attName = name[i];\n          delete this.attributes[attName];\n        }\n      } else {\n        delete this.attributes[name];\n      }\n      return this;\n    };\n\n    XMLElement.prototype.toString = function(options) {\n      return this.options.writer.set(options).element(this);\n    };\n\n    XMLElement.prototype.att = function(name, value) {\n      return this.attribute(name, value);\n    };\n\n    XMLElement.prototype.a = function(name, value) {\n      return this.attribute(name, value);\n    };\n\n    return XMLElement;\n\n  })(XMLNode);\n\n}).call(this);\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}