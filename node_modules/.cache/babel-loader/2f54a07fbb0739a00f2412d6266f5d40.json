{"ast":null,"code":"// Generated by CoffeeScript 1.12.7\n(function () {\n  var XMLWriterBase,\n      hasProp = {}.hasOwnProperty;\n\n  module.exports = XMLWriterBase = function () {\n    function XMLWriterBase(options) {\n      var key, ref, ref1, ref2, ref3, ref4, ref5, ref6, value;\n      options || (options = {});\n      this.pretty = options.pretty || false;\n      this.allowEmpty = (ref = options.allowEmpty) != null ? ref : false;\n\n      if (this.pretty) {\n        this.indent = (ref1 = options.indent) != null ? ref1 : '  ';\n        this.newline = (ref2 = options.newline) != null ? ref2 : '\\n';\n        this.offset = (ref3 = options.offset) != null ? ref3 : 0;\n        this.dontprettytextnodes = (ref4 = options.dontprettytextnodes) != null ? ref4 : 0;\n      } else {\n        this.indent = '';\n        this.newline = '';\n        this.offset = 0;\n        this.dontprettytextnodes = 0;\n      }\n\n      this.spacebeforeslash = (ref5 = options.spacebeforeslash) != null ? ref5 : '';\n\n      if (this.spacebeforeslash === true) {\n        this.spacebeforeslash = ' ';\n      }\n\n      this.newlinedefault = this.newline;\n      this.prettydefault = this.pretty;\n      ref6 = options.writer || {};\n\n      for (key in ref6) {\n        if (!hasProp.call(ref6, key)) continue;\n        value = ref6[key];\n        this[key] = value;\n      }\n    }\n\n    XMLWriterBase.prototype.set = function (options) {\n      var key, ref, value;\n      options || (options = {});\n\n      if (\"pretty\" in options) {\n        this.pretty = options.pretty;\n      }\n\n      if (\"allowEmpty\" in options) {\n        this.allowEmpty = options.allowEmpty;\n      }\n\n      if (this.pretty) {\n        this.indent = \"indent\" in options ? options.indent : '  ';\n        this.newline = \"newline\" in options ? options.newline : '\\n';\n        this.offset = \"offset\" in options ? options.offset : 0;\n        this.dontprettytextnodes = \"dontprettytextnodes\" in options ? options.dontprettytextnodes : 0;\n      } else {\n        this.indent = '';\n        this.newline = '';\n        this.offset = 0;\n        this.dontprettytextnodes = 0;\n      }\n\n      this.spacebeforeslash = \"spacebeforeslash\" in options ? options.spacebeforeslash : '';\n\n      if (this.spacebeforeslash === true) {\n        this.spacebeforeslash = ' ';\n      }\n\n      this.newlinedefault = this.newline;\n      this.prettydefault = this.pretty;\n      ref = options.writer || {};\n\n      for (key in ref) {\n        if (!hasProp.call(ref, key)) continue;\n        value = ref[key];\n        this[key] = value;\n      }\n\n      return this;\n    };\n\n    XMLWriterBase.prototype.space = function (level) {\n      var indent;\n\n      if (this.pretty) {\n        indent = (level || 0) + this.offset + 1;\n\n        if (indent > 0) {\n          return new Array(indent).join(this.indent);\n        } else {\n          return '';\n        }\n      } else {\n        return '';\n      }\n    };\n\n    return XMLWriterBase;\n  }();\n}).call(this);","map":{"version":3,"names":["XMLWriterBase","hasProp","hasOwnProperty","module","exports","options","key","ref","ref1","ref2","ref3","ref4","ref5","ref6","value","pretty","allowEmpty","indent","newline","offset","dontprettytextnodes","spacebeforeslash","newlinedefault","prettydefault","writer","call","prototype","set","space","level","Array","join"],"sources":["E:/react-projects/new project/2022/converter/converter/node_modules/xmlbuilder/lib/XMLWriterBase.js"],"sourcesContent":["// Generated by CoffeeScript 1.12.7\n(function() {\n  var XMLWriterBase,\n    hasProp = {}.hasOwnProperty;\n\n  module.exports = XMLWriterBase = (function() {\n    function XMLWriterBase(options) {\n      var key, ref, ref1, ref2, ref3, ref4, ref5, ref6, value;\n      options || (options = {});\n      this.pretty = options.pretty || false;\n      this.allowEmpty = (ref = options.allowEmpty) != null ? ref : false;\n      if (this.pretty) {\n        this.indent = (ref1 = options.indent) != null ? ref1 : '  ';\n        this.newline = (ref2 = options.newline) != null ? ref2 : '\\n';\n        this.offset = (ref3 = options.offset) != null ? ref3 : 0;\n        this.dontprettytextnodes = (ref4 = options.dontprettytextnodes) != null ? ref4 : 0;\n      } else {\n        this.indent = '';\n        this.newline = '';\n        this.offset = 0;\n        this.dontprettytextnodes = 0;\n      }\n      this.spacebeforeslash = (ref5 = options.spacebeforeslash) != null ? ref5 : '';\n      if (this.spacebeforeslash === true) {\n        this.spacebeforeslash = ' ';\n      }\n      this.newlinedefault = this.newline;\n      this.prettydefault = this.pretty;\n      ref6 = options.writer || {};\n      for (key in ref6) {\n        if (!hasProp.call(ref6, key)) continue;\n        value = ref6[key];\n        this[key] = value;\n      }\n    }\n\n    XMLWriterBase.prototype.set = function(options) {\n      var key, ref, value;\n      options || (options = {});\n      if (\"pretty\" in options) {\n        this.pretty = options.pretty;\n      }\n      if (\"allowEmpty\" in options) {\n        this.allowEmpty = options.allowEmpty;\n      }\n      if (this.pretty) {\n        this.indent = \"indent\" in options ? options.indent : '  ';\n        this.newline = \"newline\" in options ? options.newline : '\\n';\n        this.offset = \"offset\" in options ? options.offset : 0;\n        this.dontprettytextnodes = \"dontprettytextnodes\" in options ? options.dontprettytextnodes : 0;\n      } else {\n        this.indent = '';\n        this.newline = '';\n        this.offset = 0;\n        this.dontprettytextnodes = 0;\n      }\n      this.spacebeforeslash = \"spacebeforeslash\" in options ? options.spacebeforeslash : '';\n      if (this.spacebeforeslash === true) {\n        this.spacebeforeslash = ' ';\n      }\n      this.newlinedefault = this.newline;\n      this.prettydefault = this.pretty;\n      ref = options.writer || {};\n      for (key in ref) {\n        if (!hasProp.call(ref, key)) continue;\n        value = ref[key];\n        this[key] = value;\n      }\n      return this;\n    };\n\n    XMLWriterBase.prototype.space = function(level) {\n      var indent;\n      if (this.pretty) {\n        indent = (level || 0) + this.offset + 1;\n        if (indent > 0) {\n          return new Array(indent).join(this.indent);\n        } else {\n          return '';\n        }\n      } else {\n        return '';\n      }\n    };\n\n    return XMLWriterBase;\n\n  })();\n\n}).call(this);\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}