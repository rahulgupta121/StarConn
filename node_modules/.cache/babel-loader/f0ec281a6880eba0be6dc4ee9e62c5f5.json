{"ast":null,"code":"import _ from './underscore.js';\nimport { toString, SymbolProto } from './_setup.js';\nimport getByteLength from './_getByteLength.js';\nimport isTypedArray from './isTypedArray.js';\nimport isFunction from './isFunction.js';\nimport { hasStringTagBug } from './_stringTagBug.js';\nimport isDataView from './isDataView.js';\nimport keys from './keys.js';\nimport has from './_has.js';\nimport toBufferView from './_toBufferView.js'; // We use this string twice, so give it a name for minification.\n\nvar tagDataView = '[object DataView]'; // Internal recursive comparison function for `_.isEqual`.\n\nfunction eq(a, b, aStack, bStack) {\n  // Identical objects are equal. `0 === -0`, but they aren't identical.\n  // See the [Harmony `egal` proposal](https://wiki.ecmascript.org/doku.php?id=harmony:egal).\n  if (a === b) return a !== 0 || 1 / a === 1 / b; // `null` or `undefined` only equal to itself (strict comparison).\n\n  if (a == null || b == null) return false; // `NaN`s are equivalent, but non-reflexive.\n\n  if (a !== a) return b !== b; // Exhaust primitive checks\n\n  var type = typeof a;\n  if (type !== 'function' && type !== 'object' && typeof b != 'object') return false;\n  return deepEq(a, b, aStack, bStack);\n} // Internal recursive comparison function for `_.isEqual`.\n\n\nfunction deepEq(a, b, aStack, bStack) {\n  // Unwrap any wrapped objects.\n  if (a instanceof _) a = a._wrapped;\n  if (b instanceof _) b = b._wrapped; // Compare `[[Class]]` names.\n\n  var className = toString.call(a);\n  if (className !== toString.call(b)) return false; // Work around a bug in IE 10 - Edge 13.\n\n  if (hasStringTagBug && className == '[object Object]' && isDataView(a)) {\n    if (!isDataView(b)) return false;\n    className = tagDataView;\n  }\n\n  switch (className) {\n    // These types are compared by value.\n    case '[object RegExp]': // RegExps are coerced to strings for comparison (Note: '' + /a/i === '/a/i')\n\n    case '[object String]':\n      // Primitives and their corresponding object wrappers are equivalent; thus, `\"5\"` is\n      // equivalent to `new String(\"5\")`.\n      return '' + a === '' + b;\n\n    case '[object Number]':\n      // `NaN`s are equivalent, but non-reflexive.\n      // Object(NaN) is equivalent to NaN.\n      if (+a !== +a) return +b !== +b; // An `egal` comparison is performed for other numeric values.\n\n      return +a === 0 ? 1 / +a === 1 / b : +a === +b;\n\n    case '[object Date]':\n    case '[object Boolean]':\n      // Coerce dates and booleans to numeric primitive values. Dates are compared by their\n      // millisecond representations. Note that invalid dates with millisecond representations\n      // of `NaN` are not equivalent.\n      return +a === +b;\n\n    case '[object Symbol]':\n      return SymbolProto.valueOf.call(a) === SymbolProto.valueOf.call(b);\n\n    case '[object ArrayBuffer]':\n    case tagDataView:\n      // Coerce to typed array so we can fall through.\n      return deepEq(toBufferView(a), toBufferView(b), aStack, bStack);\n  }\n\n  var areArrays = className === '[object Array]';\n\n  if (!areArrays && isTypedArray(a)) {\n    var byteLength = getByteLength(a);\n    if (byteLength !== getByteLength(b)) return false;\n    if (a.buffer === b.buffer && a.byteOffset === b.byteOffset) return true;\n    areArrays = true;\n  }\n\n  if (!areArrays) {\n    if (typeof a != 'object' || typeof b != 'object') return false; // Objects with different constructors are not equivalent, but `Object`s or `Array`s\n    // from different frames are.\n\n    var aCtor = a.constructor,\n        bCtor = b.constructor;\n\n    if (aCtor !== bCtor && !(isFunction(aCtor) && aCtor instanceof aCtor && isFunction(bCtor) && bCtor instanceof bCtor) && 'constructor' in a && 'constructor' in b) {\n      return false;\n    }\n  } // Assume equality for cyclic structures. The algorithm for detecting cyclic\n  // structures is adapted from ES 5.1 section 15.12.3, abstract operation `JO`.\n  // Initializing stack of traversed objects.\n  // It's done here since we only need them for objects and arrays comparison.\n\n\n  aStack = aStack || [];\n  bStack = bStack || [];\n  var length = aStack.length;\n\n  while (length--) {\n    // Linear search. Performance is inversely proportional to the number of\n    // unique nested structures.\n    if (aStack[length] === a) return bStack[length] === b;\n  } // Add the first object to the stack of traversed objects.\n\n\n  aStack.push(a);\n  bStack.push(b); // Recursively compare objects and arrays.\n\n  if (areArrays) {\n    // Compare array lengths to determine if a deep comparison is necessary.\n    length = a.length;\n    if (length !== b.length) return false; // Deep compare the contents, ignoring non-numeric properties.\n\n    while (length--) {\n      if (!eq(a[length], b[length], aStack, bStack)) return false;\n    }\n  } else {\n    // Deep compare objects.\n    var _keys = keys(a),\n        key;\n\n    length = _keys.length; // Ensure that both objects contain the same number of properties before comparing deep equality.\n\n    if (keys(b).length !== length) return false;\n\n    while (length--) {\n      // Deep compare each member\n      key = _keys[length];\n      if (!(has(b, key) && eq(a[key], b[key], aStack, bStack))) return false;\n    }\n  } // Remove the first object from the stack of traversed objects.\n\n\n  aStack.pop();\n  bStack.pop();\n  return true;\n} // Perform a deep comparison to check if two objects are equal.\n\n\nexport default function isEqual(a, b) {\n  return eq(a, b);\n}","map":{"version":3,"names":["_","toString","SymbolProto","getByteLength","isTypedArray","isFunction","hasStringTagBug","isDataView","keys","has","toBufferView","tagDataView","eq","a","b","aStack","bStack","type","deepEq","_wrapped","className","call","valueOf","areArrays","byteLength","buffer","byteOffset","aCtor","constructor","bCtor","length","push","_keys","key","pop","isEqual"],"sources":["E:/react-projects/new project/2022/converter/converter/node_modules/underscore/modules/isEqual.js"],"sourcesContent":["import _ from './underscore.js';\nimport { toString, SymbolProto } from './_setup.js';\nimport getByteLength from './_getByteLength.js';\nimport isTypedArray from './isTypedArray.js';\nimport isFunction from './isFunction.js';\nimport { hasStringTagBug }  from './_stringTagBug.js';\nimport isDataView from './isDataView.js';\nimport keys from './keys.js';\nimport has from './_has.js';\nimport toBufferView from './_toBufferView.js';\n\n// We use this string twice, so give it a name for minification.\nvar tagDataView = '[object DataView]';\n\n// Internal recursive comparison function for `_.isEqual`.\nfunction eq(a, b, aStack, bStack) {\n  // Identical objects are equal. `0 === -0`, but they aren't identical.\n  // See the [Harmony `egal` proposal](https://wiki.ecmascript.org/doku.php?id=harmony:egal).\n  if (a === b) return a !== 0 || 1 / a === 1 / b;\n  // `null` or `undefined` only equal to itself (strict comparison).\n  if (a == null || b == null) return false;\n  // `NaN`s are equivalent, but non-reflexive.\n  if (a !== a) return b !== b;\n  // Exhaust primitive checks\n  var type = typeof a;\n  if (type !== 'function' && type !== 'object' && typeof b != 'object') return false;\n  return deepEq(a, b, aStack, bStack);\n}\n\n// Internal recursive comparison function for `_.isEqual`.\nfunction deepEq(a, b, aStack, bStack) {\n  // Unwrap any wrapped objects.\n  if (a instanceof _) a = a._wrapped;\n  if (b instanceof _) b = b._wrapped;\n  // Compare `[[Class]]` names.\n  var className = toString.call(a);\n  if (className !== toString.call(b)) return false;\n  // Work around a bug in IE 10 - Edge 13.\n  if (hasStringTagBug && className == '[object Object]' && isDataView(a)) {\n    if (!isDataView(b)) return false;\n    className = tagDataView;\n  }\n  switch (className) {\n    // These types are compared by value.\n    case '[object RegExp]':\n      // RegExps are coerced to strings for comparison (Note: '' + /a/i === '/a/i')\n    case '[object String]':\n      // Primitives and their corresponding object wrappers are equivalent; thus, `\"5\"` is\n      // equivalent to `new String(\"5\")`.\n      return '' + a === '' + b;\n    case '[object Number]':\n      // `NaN`s are equivalent, but non-reflexive.\n      // Object(NaN) is equivalent to NaN.\n      if (+a !== +a) return +b !== +b;\n      // An `egal` comparison is performed for other numeric values.\n      return +a === 0 ? 1 / +a === 1 / b : +a === +b;\n    case '[object Date]':\n    case '[object Boolean]':\n      // Coerce dates and booleans to numeric primitive values. Dates are compared by their\n      // millisecond representations. Note that invalid dates with millisecond representations\n      // of `NaN` are not equivalent.\n      return +a === +b;\n    case '[object Symbol]':\n      return SymbolProto.valueOf.call(a) === SymbolProto.valueOf.call(b);\n    case '[object ArrayBuffer]':\n    case tagDataView:\n      // Coerce to typed array so we can fall through.\n      return deepEq(toBufferView(a), toBufferView(b), aStack, bStack);\n  }\n\n  var areArrays = className === '[object Array]';\n  if (!areArrays && isTypedArray(a)) {\n      var byteLength = getByteLength(a);\n      if (byteLength !== getByteLength(b)) return false;\n      if (a.buffer === b.buffer && a.byteOffset === b.byteOffset) return true;\n      areArrays = true;\n  }\n  if (!areArrays) {\n    if (typeof a != 'object' || typeof b != 'object') return false;\n\n    // Objects with different constructors are not equivalent, but `Object`s or `Array`s\n    // from different frames are.\n    var aCtor = a.constructor, bCtor = b.constructor;\n    if (aCtor !== bCtor && !(isFunction(aCtor) && aCtor instanceof aCtor &&\n                             isFunction(bCtor) && bCtor instanceof bCtor)\n                        && ('constructor' in a && 'constructor' in b)) {\n      return false;\n    }\n  }\n  // Assume equality for cyclic structures. The algorithm for detecting cyclic\n  // structures is adapted from ES 5.1 section 15.12.3, abstract operation `JO`.\n\n  // Initializing stack of traversed objects.\n  // It's done here since we only need them for objects and arrays comparison.\n  aStack = aStack || [];\n  bStack = bStack || [];\n  var length = aStack.length;\n  while (length--) {\n    // Linear search. Performance is inversely proportional to the number of\n    // unique nested structures.\n    if (aStack[length] === a) return bStack[length] === b;\n  }\n\n  // Add the first object to the stack of traversed objects.\n  aStack.push(a);\n  bStack.push(b);\n\n  // Recursively compare objects and arrays.\n  if (areArrays) {\n    // Compare array lengths to determine if a deep comparison is necessary.\n    length = a.length;\n    if (length !== b.length) return false;\n    // Deep compare the contents, ignoring non-numeric properties.\n    while (length--) {\n      if (!eq(a[length], b[length], aStack, bStack)) return false;\n    }\n  } else {\n    // Deep compare objects.\n    var _keys = keys(a), key;\n    length = _keys.length;\n    // Ensure that both objects contain the same number of properties before comparing deep equality.\n    if (keys(b).length !== length) return false;\n    while (length--) {\n      // Deep compare each member\n      key = _keys[length];\n      if (!(has(b, key) && eq(a[key], b[key], aStack, bStack))) return false;\n    }\n  }\n  // Remove the first object from the stack of traversed objects.\n  aStack.pop();\n  bStack.pop();\n  return true;\n}\n\n// Perform a deep comparison to check if two objects are equal.\nexport default function isEqual(a, b) {\n  return eq(a, b);\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}