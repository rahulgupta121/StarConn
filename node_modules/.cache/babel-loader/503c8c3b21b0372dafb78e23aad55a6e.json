{"ast":null,"code":"import defaults from './defaults.js';\nimport _ from './underscore.js';\nimport './templateSettings.js'; // When customizing `_.templateSettings`, if you don't want to define an\n// interpolation, evaluation or escaping regex, we need one that is\n// guaranteed not to match.\n\nvar noMatch = /(.)^/; // Certain characters need to be escaped so that they can be put into a\n// string literal.\n\nvar escapes = {\n  \"'\": \"'\",\n  '\\\\': '\\\\',\n  '\\r': 'r',\n  '\\n': 'n',\n  '\\u2028': 'u2028',\n  '\\u2029': 'u2029'\n};\nvar escapeRegExp = /\\\\|'|\\r|\\n|\\u2028|\\u2029/g;\n\nfunction escapeChar(match) {\n  return '\\\\' + escapes[match];\n} // In order to prevent third-party code injection through\n// `_.templateSettings.variable`, we test it against the following regular\n// expression. It is intentionally a bit more liberal than just matching valid\n// identifiers, but still prevents possible loopholes through defaults or\n// destructuring assignment.\n\n\nvar bareIdentifier = /^\\s*(\\w|\\$)+\\s*$/; // JavaScript micro-templating, similar to John Resig's implementation.\n// Underscore templating handles arbitrary delimiters, preserves whitespace,\n// and correctly escapes quotes within interpolated code.\n// NB: `oldSettings` only exists for backwards compatibility.\n\nexport default function template(text, settings, oldSettings) {\n  if (!settings && oldSettings) settings = oldSettings;\n  settings = defaults({}, settings, _.templateSettings); // Combine delimiters into one regular expression via alternation.\n\n  var matcher = RegExp([(settings.escape || noMatch).source, (settings.interpolate || noMatch).source, (settings.evaluate || noMatch).source].join('|') + '|$', 'g'); // Compile the template source, escaping string literals appropriately.\n\n  var index = 0;\n  var source = \"__p+='\";\n  text.replace(matcher, function (match, escape, interpolate, evaluate, offset) {\n    source += text.slice(index, offset).replace(escapeRegExp, escapeChar);\n    index = offset + match.length;\n\n    if (escape) {\n      source += \"'+\\n((__t=(\" + escape + \"))==null?'':_.escape(__t))+\\n'\";\n    } else if (interpolate) {\n      source += \"'+\\n((__t=(\" + interpolate + \"))==null?'':__t)+\\n'\";\n    } else if (evaluate) {\n      source += \"';\\n\" + evaluate + \"\\n__p+='\";\n    } // Adobe VMs need the match returned to produce the correct offset.\n\n\n    return match;\n  });\n  source += \"';\\n\";\n  var argument = settings.variable;\n\n  if (argument) {\n    // Insure against third-party code injection. (CVE-2021-23358)\n    if (!bareIdentifier.test(argument)) throw new Error('variable is not a bare identifier: ' + argument);\n  } else {\n    // If a variable is not specified, place data values in local scope.\n    source = 'with(obj||{}){\\n' + source + '}\\n';\n    argument = 'obj';\n  }\n\n  source = \"var __t,__p='',__j=Array.prototype.join,\" + \"print=function(){__p+=__j.call(arguments,'');};\\n\" + source + 'return __p;\\n';\n  var render;\n\n  try {\n    render = new Function(argument, '_', source);\n  } catch (e) {\n    e.source = source;\n    throw e;\n  }\n\n  var template = function (data) {\n    return render.call(this, data, _);\n  }; // Provide the compiled source as a convenience for precompilation.\n\n\n  template.source = 'function(' + argument + '){\\n' + source + '}';\n  return template;\n}","map":{"version":3,"names":["defaults","_","noMatch","escapes","escapeRegExp","escapeChar","match","bareIdentifier","template","text","settings","oldSettings","templateSettings","matcher","RegExp","escape","source","interpolate","evaluate","join","index","replace","offset","slice","length","argument","variable","test","Error","render","Function","e","data","call"],"sources":["E:/react-projects/new project/2022/converter/converter/node_modules/underscore/modules/template.js"],"sourcesContent":["import defaults from './defaults.js';\nimport _ from './underscore.js';\nimport './templateSettings.js';\n\n// When customizing `_.templateSettings`, if you don't want to define an\n// interpolation, evaluation or escaping regex, we need one that is\n// guaranteed not to match.\nvar noMatch = /(.)^/;\n\n// Certain characters need to be escaped so that they can be put into a\n// string literal.\nvar escapes = {\n  \"'\": \"'\",\n  '\\\\': '\\\\',\n  '\\r': 'r',\n  '\\n': 'n',\n  '\\u2028': 'u2028',\n  '\\u2029': 'u2029'\n};\n\nvar escapeRegExp = /\\\\|'|\\r|\\n|\\u2028|\\u2029/g;\n\nfunction escapeChar(match) {\n  return '\\\\' + escapes[match];\n}\n\n// In order to prevent third-party code injection through\n// `_.templateSettings.variable`, we test it against the following regular\n// expression. It is intentionally a bit more liberal than just matching valid\n// identifiers, but still prevents possible loopholes through defaults or\n// destructuring assignment.\nvar bareIdentifier = /^\\s*(\\w|\\$)+\\s*$/;\n\n// JavaScript micro-templating, similar to John Resig's implementation.\n// Underscore templating handles arbitrary delimiters, preserves whitespace,\n// and correctly escapes quotes within interpolated code.\n// NB: `oldSettings` only exists for backwards compatibility.\nexport default function template(text, settings, oldSettings) {\n  if (!settings && oldSettings) settings = oldSettings;\n  settings = defaults({}, settings, _.templateSettings);\n\n  // Combine delimiters into one regular expression via alternation.\n  var matcher = RegExp([\n    (settings.escape || noMatch).source,\n    (settings.interpolate || noMatch).source,\n    (settings.evaluate || noMatch).source\n  ].join('|') + '|$', 'g');\n\n  // Compile the template source, escaping string literals appropriately.\n  var index = 0;\n  var source = \"__p+='\";\n  text.replace(matcher, function(match, escape, interpolate, evaluate, offset) {\n    source += text.slice(index, offset).replace(escapeRegExp, escapeChar);\n    index = offset + match.length;\n\n    if (escape) {\n      source += \"'+\\n((__t=(\" + escape + \"))==null?'':_.escape(__t))+\\n'\";\n    } else if (interpolate) {\n      source += \"'+\\n((__t=(\" + interpolate + \"))==null?'':__t)+\\n'\";\n    } else if (evaluate) {\n      source += \"';\\n\" + evaluate + \"\\n__p+='\";\n    }\n\n    // Adobe VMs need the match returned to produce the correct offset.\n    return match;\n  });\n  source += \"';\\n\";\n\n  var argument = settings.variable;\n  if (argument) {\n    // Insure against third-party code injection. (CVE-2021-23358)\n    if (!bareIdentifier.test(argument)) throw new Error(\n      'variable is not a bare identifier: ' + argument\n    );\n  } else {\n    // If a variable is not specified, place data values in local scope.\n    source = 'with(obj||{}){\\n' + source + '}\\n';\n    argument = 'obj';\n  }\n\n  source = \"var __t,__p='',__j=Array.prototype.join,\" +\n    \"print=function(){__p+=__j.call(arguments,'');};\\n\" +\n    source + 'return __p;\\n';\n\n  var render;\n  try {\n    render = new Function(argument, '_', source);\n  } catch (e) {\n    e.source = source;\n    throw e;\n  }\n\n  var template = function(data) {\n    return render.call(this, data, _);\n  };\n\n  // Provide the compiled source as a convenience for precompilation.\n  template.source = 'function(' + argument + '){\\n' + source + '}';\n\n  return template;\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}