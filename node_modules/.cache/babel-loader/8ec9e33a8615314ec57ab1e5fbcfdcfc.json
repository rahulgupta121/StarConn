{"ast":null,"code":"var htmlPaths = require(\"../styles/html-paths\");\n\nfunction nonFreshElement(tagName, attributes, children) {\n  return elementWithTag(htmlPaths.element(tagName, attributes, {\n    fresh: false\n  }), children);\n}\n\nfunction freshElement(tagName, attributes, children) {\n  var tag = htmlPaths.element(tagName, attributes, {\n    fresh: true\n  });\n  return elementWithTag(tag, children);\n}\n\nfunction elementWithTag(tag, children) {\n  return {\n    type: \"element\",\n    tag: tag,\n    children: children || []\n  };\n}\n\nfunction text(value) {\n  return {\n    type: \"text\",\n    value: value\n  };\n}\n\nvar forceWrite = {\n  type: \"forceWrite\"\n};\nexports.freshElement = freshElement;\nexports.nonFreshElement = nonFreshElement;\nexports.elementWithTag = elementWithTag;\nexports.text = text;\nexports.forceWrite = forceWrite;\nvar voidTagNames = {\n  \"br\": true,\n  \"hr\": true,\n  \"img\": true\n};\n\nfunction isVoidElement(node) {\n  return node.children.length === 0 && voidTagNames[node.tag.tagName];\n}\n\nexports.isVoidElement = isVoidElement;","map":{"version":3,"names":["htmlPaths","require","nonFreshElement","tagName","attributes","children","elementWithTag","element","fresh","freshElement","tag","type","text","value","forceWrite","exports","voidTagNames","isVoidElement","node","length"],"sources":["E:/react-projects/new project/2022/converter/converter/node_modules/mammoth/lib/html/ast.js"],"sourcesContent":["var htmlPaths = require(\"../styles/html-paths\");\n\n\nfunction nonFreshElement(tagName, attributes, children) {\n    return elementWithTag(\n        htmlPaths.element(tagName, attributes, {fresh: false}),\n        children);\n}\n\nfunction freshElement(tagName, attributes, children) {\n    var tag = htmlPaths.element(tagName, attributes, {fresh: true});\n    return elementWithTag(tag, children);\n}\n\nfunction elementWithTag(tag, children) {\n    return {\n        type: \"element\",\n        tag: tag,\n        children: children || []\n    };\n}\n\nfunction text(value) {\n    return {\n        type: \"text\",\n        value: value\n    };\n}\n\nvar forceWrite = {\n    type: \"forceWrite\"\n};\n\nexports.freshElement = freshElement;\nexports.nonFreshElement = nonFreshElement;\nexports.elementWithTag = elementWithTag;\nexports.text = text;\nexports.forceWrite = forceWrite;\n\nvar voidTagNames = {\n    \"br\": true,\n    \"hr\": true,\n    \"img\": true\n};\n\nfunction isVoidElement(node) {\n    return (node.children.length === 0) && voidTagNames[node.tag.tagName];\n}\n\nexports.isVoidElement = isVoidElement;\n"],"mappings":"AAAA,IAAIA,SAAS,GAAGC,OAAO,CAAC,sBAAD,CAAvB;;AAGA,SAASC,eAAT,CAAyBC,OAAzB,EAAkCC,UAAlC,EAA8CC,QAA9C,EAAwD;EACpD,OAAOC,cAAc,CACjBN,SAAS,CAACO,OAAV,CAAkBJ,OAAlB,EAA2BC,UAA3B,EAAuC;IAACI,KAAK,EAAE;EAAR,CAAvC,CADiB,EAEjBH,QAFiB,CAArB;AAGH;;AAED,SAASI,YAAT,CAAsBN,OAAtB,EAA+BC,UAA/B,EAA2CC,QAA3C,EAAqD;EACjD,IAAIK,GAAG,GAAGV,SAAS,CAACO,OAAV,CAAkBJ,OAAlB,EAA2BC,UAA3B,EAAuC;IAACI,KAAK,EAAE;EAAR,CAAvC,CAAV;EACA,OAAOF,cAAc,CAACI,GAAD,EAAML,QAAN,CAArB;AACH;;AAED,SAASC,cAAT,CAAwBI,GAAxB,EAA6BL,QAA7B,EAAuC;EACnC,OAAO;IACHM,IAAI,EAAE,SADH;IAEHD,GAAG,EAAEA,GAFF;IAGHL,QAAQ,EAAEA,QAAQ,IAAI;EAHnB,CAAP;AAKH;;AAED,SAASO,IAAT,CAAcC,KAAd,EAAqB;EACjB,OAAO;IACHF,IAAI,EAAE,MADH;IAEHE,KAAK,EAAEA;EAFJ,CAAP;AAIH;;AAED,IAAIC,UAAU,GAAG;EACbH,IAAI,EAAE;AADO,CAAjB;AAIAI,OAAO,CAACN,YAAR,GAAuBA,YAAvB;AACAM,OAAO,CAACb,eAAR,GAA0BA,eAA1B;AACAa,OAAO,CAACT,cAAR,GAAyBA,cAAzB;AACAS,OAAO,CAACH,IAAR,GAAeA,IAAf;AACAG,OAAO,CAACD,UAAR,GAAqBA,UAArB;AAEA,IAAIE,YAAY,GAAG;EACf,MAAM,IADS;EAEf,MAAM,IAFS;EAGf,OAAO;AAHQ,CAAnB;;AAMA,SAASC,aAAT,CAAuBC,IAAvB,EAA6B;EACzB,OAAQA,IAAI,CAACb,QAAL,CAAcc,MAAd,KAAyB,CAA1B,IAAgCH,YAAY,CAACE,IAAI,CAACR,GAAL,CAASP,OAAV,CAAnD;AACH;;AAEDY,OAAO,CAACE,aAAR,GAAwBA,aAAxB"},"metadata":{},"sourceType":"script"}