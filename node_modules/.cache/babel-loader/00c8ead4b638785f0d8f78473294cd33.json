{"ast":null,"code":"import restArguments from './restArguments.js';\nimport executeBound from './_executeBound.js';\nimport _ from './underscore.js'; // Partially apply a function by creating a version that has had some of its\n// arguments pre-filled, without changing its dynamic `this` context. `_` acts\n// as a placeholder by default, allowing any combination of arguments to be\n// pre-filled. Set `_.partial.placeholder` for a custom placeholder argument.\n\nvar partial = restArguments(function (func, boundArgs) {\n  var placeholder = partial.placeholder;\n\n  var bound = function () {\n    var position = 0,\n        length = boundArgs.length;\n    var args = Array(length);\n\n    for (var i = 0; i < length; i++) {\n      args[i] = boundArgs[i] === placeholder ? arguments[position++] : boundArgs[i];\n    }\n\n    while (position < arguments.length) args.push(arguments[position++]);\n\n    return executeBound(func, bound, this, this, args);\n  };\n\n  return bound;\n});\npartial.placeholder = _;\nexport default partial;","map":{"version":3,"names":["restArguments","executeBound","_","partial","func","boundArgs","placeholder","bound","position","length","args","Array","i","arguments","push"],"sources":["E:/react-projects/new project/2022/converter/converter/node_modules/underscore/modules/partial.js"],"sourcesContent":["import restArguments from './restArguments.js';\nimport executeBound from './_executeBound.js';\nimport _ from './underscore.js';\n\n// Partially apply a function by creating a version that has had some of its\n// arguments pre-filled, without changing its dynamic `this` context. `_` acts\n// as a placeholder by default, allowing any combination of arguments to be\n// pre-filled. Set `_.partial.placeholder` for a custom placeholder argument.\nvar partial = restArguments(function(func, boundArgs) {\n  var placeholder = partial.placeholder;\n  var bound = function() {\n    var position = 0, length = boundArgs.length;\n    var args = Array(length);\n    for (var i = 0; i < length; i++) {\n      args[i] = boundArgs[i] === placeholder ? arguments[position++] : boundArgs[i];\n    }\n    while (position < arguments.length) args.push(arguments[position++]);\n    return executeBound(func, bound, this, this, args);\n  };\n  return bound;\n});\n\npartial.placeholder = _;\nexport default partial;\n"],"mappings":"AAAA,OAAOA,aAAP,MAA0B,oBAA1B;AACA,OAAOC,YAAP,MAAyB,oBAAzB;AACA,OAAOC,CAAP,MAAc,iBAAd,C,CAEA;AACA;AACA;AACA;;AACA,IAAIC,OAAO,GAAGH,aAAa,CAAC,UAASI,IAAT,EAAeC,SAAf,EAA0B;EACpD,IAAIC,WAAW,GAAGH,OAAO,CAACG,WAA1B;;EACA,IAAIC,KAAK,GAAG,YAAW;IACrB,IAAIC,QAAQ,GAAG,CAAf;IAAA,IAAkBC,MAAM,GAAGJ,SAAS,CAACI,MAArC;IACA,IAAIC,IAAI,GAAGC,KAAK,CAACF,MAAD,CAAhB;;IACA,KAAK,IAAIG,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGH,MAApB,EAA4BG,CAAC,EAA7B,EAAiC;MAC/BF,IAAI,CAACE,CAAD,CAAJ,GAAUP,SAAS,CAACO,CAAD,CAAT,KAAiBN,WAAjB,GAA+BO,SAAS,CAACL,QAAQ,EAAT,CAAxC,GAAuDH,SAAS,CAACO,CAAD,CAA1E;IACD;;IACD,OAAOJ,QAAQ,GAAGK,SAAS,CAACJ,MAA5B,EAAoCC,IAAI,CAACI,IAAL,CAAUD,SAAS,CAACL,QAAQ,EAAT,CAAnB;;IACpC,OAAOP,YAAY,CAACG,IAAD,EAAOG,KAAP,EAAc,IAAd,EAAoB,IAApB,EAA0BG,IAA1B,CAAnB;EACD,CARD;;EASA,OAAOH,KAAP;AACD,CAZ0B,CAA3B;AAcAJ,OAAO,CAACG,WAAR,GAAsBJ,CAAtB;AACA,eAAeC,OAAf"},"metadata":{},"sourceType":"module"}