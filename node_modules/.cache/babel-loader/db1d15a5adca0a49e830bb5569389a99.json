{"ast":null,"code":"var fromArray = exports.fromArray = function (array) {\n  var index = 0;\n\n  var hasNext = function () {\n    return index < array.length;\n  };\n\n  return new LazyIterator({\n    hasNext: hasNext,\n    next: function () {\n      if (!hasNext()) {\n        throw new Error(\"No more elements\");\n      } else {\n        return array[index++];\n      }\n    }\n  });\n};\n\nvar LazyIterator = function (iterator) {\n  this._iterator = iterator;\n};\n\nLazyIterator.prototype.map = function (func) {\n  var iterator = this._iterator;\n  return new LazyIterator({\n    hasNext: function () {\n      return iterator.hasNext();\n    },\n    next: function () {\n      return func(iterator.next());\n    }\n  });\n};\n\nLazyIterator.prototype.filter = function (condition) {\n  var iterator = this._iterator;\n  var moved = false;\n  var hasNext = false;\n  var next;\n\n  var moveIfNecessary = function () {\n    if (moved) {\n      return;\n    }\n\n    moved = true;\n    hasNext = false;\n\n    while (iterator.hasNext() && !hasNext) {\n      next = iterator.next();\n      hasNext = condition(next);\n    }\n  };\n\n  return new LazyIterator({\n    hasNext: function () {\n      moveIfNecessary();\n      return hasNext;\n    },\n    next: function () {\n      moveIfNecessary();\n      var toReturn = next;\n      moved = false;\n      return toReturn;\n    }\n  });\n};\n\nLazyIterator.prototype.first = function () {\n  var iterator = this._iterator;\n\n  if (this._iterator.hasNext()) {\n    return iterator.next();\n  } else {\n    return null;\n  }\n};\n\nLazyIterator.prototype.toArray = function () {\n  var result = [];\n\n  while (this._iterator.hasNext()) {\n    result.push(this._iterator.next());\n  }\n\n  return result;\n};","map":{"version":3,"names":["fromArray","exports","array","index","hasNext","length","LazyIterator","next","Error","iterator","_iterator","prototype","map","func","filter","condition","moved","moveIfNecessary","toReturn","first","toArray","result","push"],"sources":["E:/react-projects/new project/2022/converter/converter/node_modules/lop/lib/lazy-iterators.js"],"sourcesContent":["var fromArray = exports.fromArray = function(array) {\n    var index = 0;\n    var hasNext = function() {\n        return index < array.length;\n    };\n    return new LazyIterator({\n        hasNext: hasNext,\n        next: function() {\n            if (!hasNext()) {\n                throw new Error(\"No more elements\");\n            } else {\n                return array[index++];\n            }\n        }\n    });\n};\n\nvar LazyIterator = function(iterator) {\n    this._iterator = iterator;\n};\n\nLazyIterator.prototype.map = function(func) {\n    var iterator = this._iterator;\n    return new LazyIterator({\n        hasNext: function() {\n            return iterator.hasNext();\n        },\n        next: function() {\n            return func(iterator.next());\n        }\n    });\n};\n\nLazyIterator.prototype.filter = function(condition) {\n    var iterator = this._iterator;\n    \n    var moved = false;\n    var hasNext = false;\n    var next;\n    var moveIfNecessary = function() {\n        if (moved) {\n            return;\n        }\n        moved = true;\n        hasNext = false;\n        while (iterator.hasNext() && !hasNext) {\n            next = iterator.next();\n            hasNext = condition(next);\n        }\n    };\n    \n    return new LazyIterator({\n        hasNext: function() {\n            moveIfNecessary();\n            return hasNext;\n        },\n        next: function() {\n            moveIfNecessary();\n            var toReturn = next;\n            moved = false;\n            return toReturn;\n        }\n    });\n};\n\nLazyIterator.prototype.first = function() {\n    var iterator = this._iterator;\n    if (this._iterator.hasNext()) {\n        return iterator.next();\n    } else {\n        return null;\n    }\n};\n\nLazyIterator.prototype.toArray = function() {\n    var result = [];\n    while (this._iterator.hasNext()) {\n        result.push(this._iterator.next());\n    }\n    return result;\n};\n"],"mappings":"AAAA,IAAIA,SAAS,GAAGC,OAAO,CAACD,SAAR,GAAoB,UAASE,KAAT,EAAgB;EAChD,IAAIC,KAAK,GAAG,CAAZ;;EACA,IAAIC,OAAO,GAAG,YAAW;IACrB,OAAOD,KAAK,GAAGD,KAAK,CAACG,MAArB;EACH,CAFD;;EAGA,OAAO,IAAIC,YAAJ,CAAiB;IACpBF,OAAO,EAAEA,OADW;IAEpBG,IAAI,EAAE,YAAW;MACb,IAAI,CAACH,OAAO,EAAZ,EAAgB;QACZ,MAAM,IAAII,KAAJ,CAAU,kBAAV,CAAN;MACH,CAFD,MAEO;QACH,OAAON,KAAK,CAACC,KAAK,EAAN,CAAZ;MACH;IACJ;EARmB,CAAjB,CAAP;AAUH,CAfD;;AAiBA,IAAIG,YAAY,GAAG,UAASG,QAAT,EAAmB;EAClC,KAAKC,SAAL,GAAiBD,QAAjB;AACH,CAFD;;AAIAH,YAAY,CAACK,SAAb,CAAuBC,GAAvB,GAA6B,UAASC,IAAT,EAAe;EACxC,IAAIJ,QAAQ,GAAG,KAAKC,SAApB;EACA,OAAO,IAAIJ,YAAJ,CAAiB;IACpBF,OAAO,EAAE,YAAW;MAChB,OAAOK,QAAQ,CAACL,OAAT,EAAP;IACH,CAHmB;IAIpBG,IAAI,EAAE,YAAW;MACb,OAAOM,IAAI,CAACJ,QAAQ,CAACF,IAAT,EAAD,CAAX;IACH;EANmB,CAAjB,CAAP;AAQH,CAVD;;AAYAD,YAAY,CAACK,SAAb,CAAuBG,MAAvB,GAAgC,UAASC,SAAT,EAAoB;EAChD,IAAIN,QAAQ,GAAG,KAAKC,SAApB;EAEA,IAAIM,KAAK,GAAG,KAAZ;EACA,IAAIZ,OAAO,GAAG,KAAd;EACA,IAAIG,IAAJ;;EACA,IAAIU,eAAe,GAAG,YAAW;IAC7B,IAAID,KAAJ,EAAW;MACP;IACH;;IACDA,KAAK,GAAG,IAAR;IACAZ,OAAO,GAAG,KAAV;;IACA,OAAOK,QAAQ,CAACL,OAAT,MAAsB,CAACA,OAA9B,EAAuC;MACnCG,IAAI,GAAGE,QAAQ,CAACF,IAAT,EAAP;MACAH,OAAO,GAAGW,SAAS,CAACR,IAAD,CAAnB;IACH;EACJ,CAVD;;EAYA,OAAO,IAAID,YAAJ,CAAiB;IACpBF,OAAO,EAAE,YAAW;MAChBa,eAAe;MACf,OAAOb,OAAP;IACH,CAJmB;IAKpBG,IAAI,EAAE,YAAW;MACbU,eAAe;MACf,IAAIC,QAAQ,GAAGX,IAAf;MACAS,KAAK,GAAG,KAAR;MACA,OAAOE,QAAP;IACH;EAVmB,CAAjB,CAAP;AAYH,CA9BD;;AAgCAZ,YAAY,CAACK,SAAb,CAAuBQ,KAAvB,GAA+B,YAAW;EACtC,IAAIV,QAAQ,GAAG,KAAKC,SAApB;;EACA,IAAI,KAAKA,SAAL,CAAeN,OAAf,EAAJ,EAA8B;IAC1B,OAAOK,QAAQ,CAACF,IAAT,EAAP;EACH,CAFD,MAEO;IACH,OAAO,IAAP;EACH;AACJ,CAPD;;AASAD,YAAY,CAACK,SAAb,CAAuBS,OAAvB,GAAiC,YAAW;EACxC,IAAIC,MAAM,GAAG,EAAb;;EACA,OAAO,KAAKX,SAAL,CAAeN,OAAf,EAAP,EAAiC;IAC7BiB,MAAM,CAACC,IAAP,CAAY,KAAKZ,SAAL,CAAeH,IAAf,EAAZ;EACH;;EACD,OAAOc,MAAP;AACH,CAND"},"metadata":{},"sourceType":"script"}