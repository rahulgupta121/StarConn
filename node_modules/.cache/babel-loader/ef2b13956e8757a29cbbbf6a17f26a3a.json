{"ast":null,"code":"var PDF = require('./pdf');\n\nmodule.exports = {\n  create: function createPdf(html, options, callback) {\n    if (arguments.length === 1) {\n      return new PDF(html);\n    }\n\n    if (arguments.length === 2 && typeof options !== 'function') {\n      return new PDF(html, options);\n    }\n\n    if (arguments.length === 2) {\n      callback = options;\n      options = {};\n    }\n\n    try {\n      var pdf = new PDF(html, options);\n    } catch (err) {\n      return callback(err);\n    }\n\n    pdf.exec(callback);\n  }\n};","map":{"version":3,"names":["PDF","require","module","exports","create","createPdf","html","options","callback","arguments","length","pdf","err","exec"],"sources":["E:/react-projects/new project/2022/converter/converter/node_modules/html-pdf/lib/index.js"],"sourcesContent":["var PDF = require('./pdf')\n\nmodule.exports = {\n  create: function createPdf (html, options, callback) {\n    if (arguments.length === 1) {\n      return new PDF(html)\n    }\n\n    if (arguments.length === 2 && typeof options !== 'function') {\n      return new PDF(html, options)\n    }\n\n    if (arguments.length === 2) {\n      callback = options\n      options = {}\n    }\n\n    try {\n      var pdf = new PDF(html, options)\n    } catch (err) {\n      return callback(err)\n    }\n\n    pdf.exec(callback)\n  }\n}\n"],"mappings":"AAAA,IAAIA,GAAG,GAAGC,OAAO,CAAC,OAAD,CAAjB;;AAEAC,MAAM,CAACC,OAAP,GAAiB;EACfC,MAAM,EAAE,SAASC,SAAT,CAAoBC,IAApB,EAA0BC,OAA1B,EAAmCC,QAAnC,EAA6C;IACnD,IAAIC,SAAS,CAACC,MAAV,KAAqB,CAAzB,EAA4B;MAC1B,OAAO,IAAIV,GAAJ,CAAQM,IAAR,CAAP;IACD;;IAED,IAAIG,SAAS,CAACC,MAAV,KAAqB,CAArB,IAA0B,OAAOH,OAAP,KAAmB,UAAjD,EAA6D;MAC3D,OAAO,IAAIP,GAAJ,CAAQM,IAAR,EAAcC,OAAd,CAAP;IACD;;IAED,IAAIE,SAAS,CAACC,MAAV,KAAqB,CAAzB,EAA4B;MAC1BF,QAAQ,GAAGD,OAAX;MACAA,OAAO,GAAG,EAAV;IACD;;IAED,IAAI;MACF,IAAII,GAAG,GAAG,IAAIX,GAAJ,CAAQM,IAAR,EAAcC,OAAd,CAAV;IACD,CAFD,CAEE,OAAOK,GAAP,EAAY;MACZ,OAAOJ,QAAQ,CAACI,GAAD,CAAf;IACD;;IAEDD,GAAG,CAACE,IAAJ,CAASL,QAAT;EACD;AAtBc,CAAjB"},"metadata":{},"sourceType":"script"}