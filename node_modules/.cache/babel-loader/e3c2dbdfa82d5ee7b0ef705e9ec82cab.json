{"ast":null,"code":"var _ = require(\"underscore\");\n\nvar ast = require(\"./ast\");\n\nfunction simplify(nodes) {\n  return collapse(removeEmpty(nodes));\n}\n\nfunction collapse(nodes) {\n  var children = [];\n  nodes.map(collapseNode).forEach(function (child) {\n    appendChild(children, child);\n  });\n  return children;\n}\n\nfunction collapseNode(node) {\n  return collapsers[node.type](node);\n}\n\nvar collapsers = {\n  element: collapseElement,\n  text: identity,\n  forceWrite: identity\n};\n\nfunction collapseElement(node) {\n  return ast.elementWithTag(node.tag, collapse(node.children));\n}\n\nfunction identity(value) {\n  return value;\n}\n\nfunction appendChild(children, child) {\n  var lastChild = children[children.length - 1];\n\n  if (child.type === \"element\" && !child.tag.fresh && lastChild && lastChild.type === \"element\" && child.tag.matchesElement(lastChild.tag)) {\n    if (child.tag.separator) {\n      appendChild(lastChild.children, ast.text(child.tag.separator));\n    }\n\n    child.children.forEach(function (grandChild) {\n      // Mutation is fine since simplifying elements create a copy of the children.\n      appendChild(lastChild.children, grandChild);\n    });\n  } else {\n    children.push(child);\n  }\n}\n\nfunction removeEmpty(nodes) {\n  return flatMap(nodes, function (node) {\n    return emptiers[node.type](node);\n  });\n}\n\nfunction flatMap(values, func) {\n  return _.flatten(_.map(values, func), true);\n}\n\nvar emptiers = {\n  element: elementEmptier,\n  text: textEmptier,\n  forceWrite: neverEmpty\n};\n\nfunction neverEmpty(node) {\n  return [node];\n}\n\nfunction elementEmptier(element) {\n  var children = removeEmpty(element.children);\n\n  if (children.length === 0 && !ast.isVoidElement(element)) {\n    return [];\n  } else {\n    return [ast.elementWithTag(element.tag, children)];\n  }\n}\n\nfunction textEmptier(node) {\n  if (node.value.length === 0) {\n    return [];\n  } else {\n    return [node];\n  }\n}\n\nmodule.exports = simplify;","map":{"version":3,"names":["_","require","ast","simplify","nodes","collapse","removeEmpty","children","map","collapseNode","forEach","child","appendChild","node","collapsers","type","element","collapseElement","text","identity","forceWrite","elementWithTag","tag","value","lastChild","length","fresh","matchesElement","separator","grandChild","push","flatMap","emptiers","values","func","flatten","elementEmptier","textEmptier","neverEmpty","isVoidElement","module","exports"],"sources":["E:/react-projects/new project/2022/converter/converter/node_modules/mammoth/lib/html/simplify.js"],"sourcesContent":["var _ = require(\"underscore\");\n\nvar ast = require(\"./ast\");\n\nfunction simplify(nodes) {\n    return collapse(removeEmpty(nodes));\n}\n\nfunction collapse(nodes) {\n    var children = [];\n    \n    nodes.map(collapseNode).forEach(function(child) {\n        appendChild(children, child);\n    });\n    return children;\n}\n\nfunction collapseNode(node) {\n    return collapsers[node.type](node);\n}\n\nvar collapsers = {\n    element: collapseElement,\n    text: identity,\n    forceWrite: identity\n};\n\nfunction collapseElement(node) {\n    return ast.elementWithTag(node.tag, collapse(node.children));\n}\n\nfunction identity(value) {\n    return value;\n}\n\nfunction appendChild(children, child) {\n    var lastChild = children[children.length - 1];\n    if (child.type === \"element\" && !child.tag.fresh && lastChild && lastChild.type === \"element\" && child.tag.matchesElement(lastChild.tag)) {\n        if (child.tag.separator) {\n            appendChild(lastChild.children, ast.text(child.tag.separator));\n        }\n        child.children.forEach(function(grandChild) {\n            // Mutation is fine since simplifying elements create a copy of the children.\n            appendChild(lastChild.children, grandChild);\n        });\n    } else {\n        children.push(child);\n    }\n}\n\nfunction removeEmpty(nodes) {\n    return flatMap(nodes, function(node) {\n        return emptiers[node.type](node);\n    });\n}\n\nfunction flatMap(values, func) {\n    return _.flatten(_.map(values, func), true);\n}\n\nvar emptiers = {\n    element: elementEmptier,\n    text: textEmptier,\n    forceWrite: neverEmpty\n};\n\nfunction neverEmpty(node) {\n    return [node];\n}\n\nfunction elementEmptier(element) {\n    var children = removeEmpty(element.children);\n    if (children.length === 0 && !ast.isVoidElement(element)) {\n        return [];\n    } else {\n        return [ast.elementWithTag(element.tag, children)];\n    }\n}\n\nfunction textEmptier(node) {\n    if (node.value.length === 0) {\n        return [];\n    } else {\n        return [node];\n    }\n}\n\nmodule.exports = simplify;\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}