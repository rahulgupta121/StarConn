{"ast":null,"code":"var documents = require(\"../documents\");\n\nvar Result = require(\"../results\").Result;\n\nexports.createFootnotesReader = createReader.bind(this, \"footnote\");\nexports.createEndnotesReader = createReader.bind(this, \"endnote\");\n\nfunction createReader(noteType, bodyReader) {\n  function readNotesXml(element) {\n    return Result.combine(element.getElementsByTagName(\"w:\" + noteType).filter(isFootnoteElement).map(readFootnoteElement));\n  }\n\n  function isFootnoteElement(element) {\n    var type = element.attributes[\"w:type\"];\n    return type !== \"continuationSeparator\" && type !== \"separator\";\n  }\n\n  function readFootnoteElement(footnoteElement) {\n    var id = footnoteElement.attributes[\"w:id\"];\n    return bodyReader.readXmlElements(footnoteElement.children).map(function (body) {\n      return documents.Note({\n        noteType: noteType,\n        noteId: id,\n        body: body\n      });\n    });\n  }\n\n  return readNotesXml;\n}","map":{"version":3,"names":["documents","require","Result","exports","createFootnotesReader","createReader","bind","createEndnotesReader","noteType","bodyReader","readNotesXml","element","combine","getElementsByTagName","filter","isFootnoteElement","map","readFootnoteElement","type","attributes","footnoteElement","id","readXmlElements","children","body","Note","noteId"],"sources":["E:/react-projects/new project/2022/converter/converter/node_modules/mammoth/lib/docx/notes-reader.js"],"sourcesContent":["var documents = require(\"../documents\");\nvar Result = require(\"../results\").Result;\n\nexports.createFootnotesReader = createReader.bind(this, \"footnote\");\nexports.createEndnotesReader = createReader.bind(this, \"endnote\");\n\nfunction createReader(noteType, bodyReader) {\n    function readNotesXml(element) {\n        return Result.combine(element.getElementsByTagName(\"w:\" + noteType)\n            .filter(isFootnoteElement)\n            .map(readFootnoteElement));\n    }\n\n    function isFootnoteElement(element) {\n        var type = element.attributes[\"w:type\"];\n        return type !== \"continuationSeparator\" && type !== \"separator\";\n    }\n\n    function readFootnoteElement(footnoteElement) {\n        var id = footnoteElement.attributes[\"w:id\"];\n        return bodyReader.readXmlElements(footnoteElement.children)\n            .map(function(body) {\n                return documents.Note({noteType: noteType, noteId: id, body: body});\n            });\n    }\n    \n    return readNotesXml;\n}\n"],"mappings":"AAAA,IAAIA,SAAS,GAAGC,OAAO,CAAC,cAAD,CAAvB;;AACA,IAAIC,MAAM,GAAGD,OAAO,CAAC,YAAD,CAAP,CAAsBC,MAAnC;;AAEAC,OAAO,CAACC,qBAAR,GAAgCC,YAAY,CAACC,IAAb,CAAkB,IAAlB,EAAwB,UAAxB,CAAhC;AACAH,OAAO,CAACI,oBAAR,GAA+BF,YAAY,CAACC,IAAb,CAAkB,IAAlB,EAAwB,SAAxB,CAA/B;;AAEA,SAASD,YAAT,CAAsBG,QAAtB,EAAgCC,UAAhC,EAA4C;EACxC,SAASC,YAAT,CAAsBC,OAAtB,EAA+B;IAC3B,OAAOT,MAAM,CAACU,OAAP,CAAeD,OAAO,CAACE,oBAAR,CAA6B,OAAOL,QAApC,EACjBM,MADiB,CACVC,iBADU,EAEjBC,GAFiB,CAEbC,mBAFa,CAAf,CAAP;EAGH;;EAED,SAASF,iBAAT,CAA2BJ,OAA3B,EAAoC;IAChC,IAAIO,IAAI,GAAGP,OAAO,CAACQ,UAAR,CAAmB,QAAnB,CAAX;IACA,OAAOD,IAAI,KAAK,uBAAT,IAAoCA,IAAI,KAAK,WAApD;EACH;;EAED,SAASD,mBAAT,CAA6BG,eAA7B,EAA8C;IAC1C,IAAIC,EAAE,GAAGD,eAAe,CAACD,UAAhB,CAA2B,MAA3B,CAAT;IACA,OAAOV,UAAU,CAACa,eAAX,CAA2BF,eAAe,CAACG,QAA3C,EACFP,GADE,CACE,UAASQ,IAAT,EAAe;MAChB,OAAOxB,SAAS,CAACyB,IAAV,CAAe;QAACjB,QAAQ,EAAEA,QAAX;QAAqBkB,MAAM,EAAEL,EAA7B;QAAiCG,IAAI,EAAEA;MAAvC,CAAf,CAAP;IACH,CAHE,CAAP;EAIH;;EAED,OAAOd,YAAP;AACH"},"metadata":{},"sourceType":"script"}